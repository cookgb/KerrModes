(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    466343,       8975]
NotebookOptionsPosition[    454938,       8806]
NotebookOutlinePosition[    455406,       8824]
CellTagsIndexPosition[    455363,       8821]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<PacletTools`\>\"", "]"}]], "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"73ff9ba2-3114-4a84-a331-875b81b51bfd"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "PacletDir", "=", 
   "\"\</Users/cookgb/Research/PublicPaclets/KerrModes\>\""}], ";"}]], "Input",\

 CellChangeTimes->{{3.880727167034521*^9, 3.8807271888905582`*^9}, {
   3.880727238232298*^9, 3.8807272425245457`*^9}, 
   3.882263496012701*^9},ExpressionUUID->"ffe29410-1f6c-4cd1-bcb3-\
7d209e3d54bb"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "PacletDir", "=", "\"\</home/cookgb/Research/PublicPaclets/KerrModes\>\""}],
   ";"}]], "Input",
 CellChangeTimes->{{3.880727167034521*^9, 3.880727248578663*^9}, 
   3.8822634970255136`*^9},
 CellLabel->"In[2]:=",ExpressionUUID->"b72abf0a-bfd2-4f00-91da-3a66e98d26f2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PacletDirectoryLoad", "[", "PacletDir", "]"}]], "Input",
 CellChangeTimes->{{3.8795007281500063`*^9, 3.879500737675147*^9}, 
   3.880726093520657*^9, {3.880727258302607*^9, 3.8807272605165863`*^9}, {
   3.880727324937586*^9, 3.88072732707215*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"f176d2c0-072e-4b4f-bd48-16d806f0293c"],

Cell[BoxData[
 RowBox[{"{", "\<\"/home/cookgb/Research/PublicPaclets/KerrModes\"\>", 
  "}"}]], "Output",
 CellChangeTimes->{
  3.879500776684245*^9, 3.879501348396533*^9, 3.8795020400452843`*^9, 
   3.879516065822768*^9, 3.8795204405191383`*^9, 3.880726131006557*^9, 
   3.880726230113894*^9, 3.8807272701812687`*^9, 3.880727328069871*^9, 
   3.8810788973733788`*^9, 3.881089413714859*^9, 3.8815983899444323`*^9, 
   3.882108528856386*^9, 3.882128237161824*^9, 3.882130214490428*^9, {
   3.88213071444109*^9, 3.882130731919623*^9}, 3.882131258110834*^9, 
   3.882214565056116*^9, 3.8822632474792233`*^9, 3.882267451701428*^9, 
   3.882291631189741*^9, 3.8823496816152563`*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"235a536f-f7ce-4719-a0bb-2b2cc78be0d0"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"PacletFind", "[", "\"\<Kerr*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.879500754586946*^9, 3.8795007566339617`*^9}, {
  3.8795008936008587`*^9, 3.879500922369796*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"9c994642-816b-4b2f-a759-9701c42cd6d8"],

Cell[BoxData[
 RowBox[{"PacletFind", "[", "\"\<SWSpheroidal\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.879500805235086*^9, 3.879500824427189*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"545b62f0-35de-456b-8c3d-11f8d95a6eb9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"result", "[", "1", "]"}], "=", 
  RowBox[{"PacletBuild", "[", 
   RowBox[{"PacletDir", "<>", "\"\</KerrModes\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.879501362564122*^9, 3.879501378042837*^9}, 
   3.879501564345615*^9, {3.879501688591901*^9, 3.879501736852374*^9}, {
   3.8795018248538218`*^9, 3.879501828090248*^9}, {3.879501926874854*^9, 
   3.879501969436881*^9}, 3.8807260990445232`*^9, {3.880727348560328*^9, 
   3.8807273623096113`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"7d616c86-8072-4a37-b4bc-eb9e79f42541"],

Cell[BoxData[
 TemplateBox[{
  "DocumentationBuild`Info`GetNotebookHistoryData", "notfound", 
   "\"Could not find the history data for Excised\"", 2, 5, 5, 
   19309420012344080692, "Local", 
   "DocumentationBuild`Info`GetNotebookHistoryData"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.881089418693664*^9, 3.881598397098105*^9, 
  3.882128244498817*^9, 3.882130220695146*^9, 3.8821307383171988`*^9, 
  3.882131261259387*^9, 3.882214569955988*^9, 3.882263258857699*^9, 
  3.88226745603306*^9, 3.882291637500201*^9, 3.882349689562271*^9, 
  3.882349814725841*^9},
 CellLabel->
  "During evaluation of \
In[5]:=",ExpressionUUID->"0228dcdd-4ccd-4441-b8b6-37fc68de4dbd"],

Cell[BoxData[
 TemplateBox[{
  "DocumentationBuild`Info`GetNotebookHistoryData", "notfound", 
   "\"Could not find the history data for Excised\"", 2, 5, 6, 
   19309420012344080692, "Local", 
   "DocumentationBuild`Info`GetNotebookHistoryData"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.881089418693664*^9, 3.881598397098105*^9, 
  3.882128244498817*^9, 3.882130220695146*^9, 3.8821307383171988`*^9, 
  3.882131261259387*^9, 3.882214569955988*^9, 3.882263258857699*^9, 
  3.88226745603306*^9, 3.882291637500201*^9, 3.882349689562271*^9, 
  3.882349814783239*^9},
 CellLabel->
  "During evaluation of \
In[5]:=",ExpressionUUID->"4b519eb9-1777-4f75-9864-82ada1c328a3"],

Cell[BoxData[
 TemplateBox[{
  "DocumentationBuild`Info`GetNotebookHistoryData", "notfound", 
   "\"Could not find the history data for Excised\"", 2, 5, 7, 
   19309420012344080692, "Local", 
   "DocumentationBuild`Info`GetNotebookHistoryData"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.881089418693664*^9, 3.881598397098105*^9, 
  3.882128244498817*^9, 3.882130220695146*^9, 3.8821307383171988`*^9, 
  3.882131261259387*^9, 3.882214569955988*^9, 3.882263258857699*^9, 
  3.88226745603306*^9, 3.882291637500201*^9, 3.882349689562271*^9, 
  3.8823498147908497`*^9},
 CellLabel->
  "During evaluation of \
In[5]:=",ExpressionUUID->"ee5ea593-c16f-4cbc-8330-3e951813ba37"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \
\\!\\(\\*StyleBox[RowBox[{\\\"DocumentationBuild`Info`GetNotebookHistoryData\\\
\", \\\"::\\\", \\\"notfound\\\"}], \\\"MessageName\\\"]\\) will be \
suppressed during this calculation.\"", 2, 5, 8, 19309420012344080692, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.881089418693664*^9, 3.881598397098105*^9, 
  3.882128244498817*^9, 3.882130220695146*^9, 3.8821307383171988`*^9, 
  3.882131261259387*^9, 3.882214569955988*^9, 3.882263258857699*^9, 
  3.88226745603306*^9, 3.882291637500201*^9, 3.882349689562271*^9, 
  3.882349814798457*^9},
 CellLabel->
  "During evaluation of \
In[5]:=",ExpressionUUID->"62e40494-5015-431b-ac3a-de9847ee6cfc"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["Success",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            FrameBox[
             StyleBox["\"\[Checkmark]\"", 
              Directive[
               RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
               25], StripOnInput -> False], ContentPadding -> False, 
             FrameStyle -> None, FrameMargins -> {{0, 0}, {0, 0}}, 
             StripOnInput -> False], 
            GridBox[{{
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"PacletArchive\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                 "\"/home/cookgb/Research/PublicPaclets/KerrModes/KerrModes/\
build/KerrModes-1.0.0.paclet\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "4.501117`", "\"s\"", "seconds", "\"Seconds\""}, 
                   "Quantity", SyntaxForm -> Mod], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            FrameBox[
             StyleBox["\"\[Checkmark]\"", 
              Directive[
               RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
               25], StripOnInput -> False], ContentPadding -> False, 
             FrameStyle -> None, FrameMargins -> {{0, 0}, {0, 0}}, 
             StripOnInput -> False], 
            GridBox[{{
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"PacletArchive\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                 "\"/home/cookgb/Research/PublicPaclets/KerrModes/KerrModes/\
build/KerrModes-1.0.0.paclet\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "4.501117`", "\"s\"", "seconds", "\"Seconds\""}, 
                   "Quantity", SyntaxForm -> Mod], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"PacletManifest\"", "\": \""}, "RowDefault"],
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   TagBox[
                    
                    DynamicModuleBox[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
                    "InitialData" -> <|
                    "Files" -> {<|
                    "File" -> File["Kernel/KerrModes.wl"], "Hash" -> 
                    "362be7398219b38974ee603bce6e24c08246972f3ed7907eb24f19562\
87f797a"|>, <|"File" -> File["Documentation/English/Guides/ModesOfKerr.nb"], 
                    "Hash" -> 
                    "ad92411de635540ee66f021ff058cd2e42c3513dd77cb8033a4b9561a\
49e62bb"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
AngularModeRealPath.nb"], "Hash" -> 
                    "052128d408df89a2db6f33d42c1e569abef8cbb64ede572a9f0076589\
70a82c7"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
CurvatureRatio.nb"], "Hash" -> 
                    "12dd67de91de795acbfd2a928e28e9d8e605c681c0bdfd39815003d7f\
30bb0ba"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ExtrapolationOrder.nb"], "Hash" -> 
                    "8d65269be5e1beb21f3a176090f6ae1803d49e9f0f98b71d5bfa0275a\
920c9bd"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ForceRefinement.nb"], "Hash" -> 
                    "44130e1da17ccdd68c61b786b1a21390d15c997a68463c60cb81d0d0c\
9a7d39e"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/Index.\
nb"], "Hash" -> 
                    "2734ae6f900e0196574e4db7251596c4b1eab01d9171b0903e4bc256b\
e84ff73"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
JacobianStep.nb"], "Hash" -> 
                    "082a82592c2c5a3c2ba9011c346f75dc267be2273f14c281483bd3c45\
407d849"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
KerraAList.nb"], "Hash" -> 
                    "d6aa9b5bfe2feb1d7882aa6192cb5bf6d58324452f353f46b3568374a\
c208292"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
KerraAListS.nb"], "Hash" -> 
                    "815ca0d5e815a2da7a2da32a4bae8cda2f26fe95bf48db5c6dfc17af4\
3abed92"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
KerrAList.nb"], "Hash" -> 
                    "b54e0c48c426053f054dad381a2bc03769127e5f474f0cadebf48f0e9\
500bbb3"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
KerrAListS.nb"], "Hash" -> 
                    "273b1dd3c0679ef4e4b1edc439f0bee7b0b7d3683e823e0c15149215c\
62d2679"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
KerraOmegaList.nb"], "Hash" -> 
                    "eb42e19ccf46860d496900a36fafaf345bb2827329c697db6b83f0720\
255eab7"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
KerraOmegaListS.nb"], "Hash" -> 
                    "0fb244e8533e6eb821894cf2d322ba5146000d4ece32d61a8d50baed2\
210e37d"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
KerrModeMakeMultiplet.nb"], "Hash" -> 
                    "914bc12f156387e50960e2caa14bb90029fed7e777da59c7e6d843183\
a01253a"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
KerrModeRefineSequence.nb"], "Hash" -> 
                    "074f6bddf77e36ff6c22deb71c6d5d22d47fe706c2d264691b789cb8c\
4efbf21"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
KerrModeSequence.nb"], "Hash" -> 
                    "f035cb57d3cb4fb8c407b0a0d4a0d6bf97c0289d08b8dc98f785ce148\
3029d14"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
KerrOmegaList.nb"], "Hash" -> 
                    "1f2c36bdaceb2961a7abfb07f51a6235a16f18d1053551fb63fb0927e\
b8e1770"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
KerrOmegaListS.nb"], "Hash" -> 
                    "8925f3c3bb22578d40ac5df89752d9beba4ae8e30260699de2629b430\
1a705ce"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
LimitRefinement.nb"], "Hash" -> 
                    "e757b46a54ee35b7cce22801722b381724976805a5fb6bcda081f90e9\
a85a2f5"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
Maxblevel.nb"], "Hash" -> 
                    "3b341e1c1f6c18d7c2392ec78eef5dcd4988fbdbdc72dfdcc82c65ab1\
161d0da"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
MaxDeltaOmega.nb"], "Hash" -> 
                    "2e454a06b4b069e9de2d4c9263a06486abcbbcd20df2015104e204340\
f5b7751"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
MaximalaEpsilon.nb"], "Hash" -> 
                    "9aa4777e34eeeea1a810912f53b97fcb573d7ba820c4a57d4849dad26\
b10f9c8"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
Minblevel.nb"], "Hash" -> 
                    "75b094ec3cefc07b211a0ae3fea3feaca2b3303cfc8f922f576851751\
811d119"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
MinimalaEpsilon.nb"], "Hash" -> 
                    "f23c81e01fd84dabbcfb248597028a650bc2a9510a4429a4842880edb\
8099d7f"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ModeaStart.nb"], "Hash" -> 
                    "87c828f3831edf183e0a2cf2e25fa6ebc81d398f7a70b82a2a5196c64\
e098488"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ModeGuess.nb"], "Hash" -> 
                    "ffe5d300326fbf577f4db37ea2d64f24a0ae3664ab16b25282397cb4f\
98d7b71"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ModePlotA.nb"], "Hash" -> 
                    "e0f08dd9bd8e2a2bbbec1c214c2247a6412277a03c4b055f5e017eb3c\
4d6882a"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ModePlotOmega.nb"], "Hash" -> 
                    "7e5173e1765e1f8607916d73701e1164ac88c1678ab3e68de4b91f324\
46fddbf"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ModePlotOmegaTones.nb"], "Hash" -> 
                    "db62d85fb5c4d98fbacdb9946ea2f92f72d8eb57f07ed7d05e88eba8a\
56869a2"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ModePrecision.nb"], "Hash" -> 
                    "41003aeb35f06eeeeedb095e24bb5ce9d2cca3f1f909014f2c48c92bf\
6c295cb"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ModeSolution.nb"], "Hash" -> 
                    "1fc7b5cdb4f61189219cd0a50163abc69f75f77d637082625a6245643\
8906f89"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ModeType.nb"], "Hash" -> 
                    "2967f27ca87262e4562233e3bcb205e1b2b8deb55cce4b788fb3bbca3\
f4f26e0"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
NewtonRadius.nb"], "Hash" -> 
                    "5868e561e8403098d265c8c4f21eac2b4963d58be4ff73dc7cbe14f66\
7dad526"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
NoNegOmega.nb"], "Hash" -> 
                    "a2ecdfcee635594e7a916ef3794d9adbce27f4aff8435fe600b31043b\
b9344c2"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
OTmultiple.nb"], "Hash" -> 
                    "b326f5329dbc8aa43768ddc039a1fbb3e0eef92863b5b234f859902fe\
bfc2fc5"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
OutputType.nb"], "Hash" -> 
                    "043ecb4c087bf3b5140e6fbf34c811e9be91f81c858a9e5bb9ca373b2\
3e54de7"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
PlotModeFunction.nb"], "Hash" -> 
                    "6d60318dff5721176fb8d7a750b8104b4f5a4bd7f7c526ff00462f152\
b7e29c5"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
RadialCFDepth.nb"], "Hash" -> 
                    "11fc8f190a9733cefc6c69eb122c59fd52f23f6f401c1d7c01e95379a\
45de836"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
RadialCFMaxGuess.nb"], "Hash" -> 
                    "53056b1e909c5533cd00bbe2097f5f4d55cc5bd55f1005b34b6163511\
75f514f"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
RadialCFMinDepth.nb"], "Hash" -> 
                    "7ccbaee76f432a802dd59516bb120c77724d6c69885f0f63431e97e16\
69003ce"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
RadialDebug.nb"], "Hash" -> 
                    "dd580cd3713c948a14ee009bc9de5377add4f613ecc213ca0f9290d3e\
ef58273"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
RadialLentzRoot.nb"], "Hash" -> 
                    "dc817f386553b45d03b4aa12727db03989c23b72d0036875ebd75a563\
102a13b"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
RadialRelax.nb"], "Hash" -> 
                    "6371245b37a0d75d66daba7d1f54b9a7f631cb3f3dfe26210e38de2c7\
a6fd57e"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
RefinementAction.nb"], "Hash" -> 
                    "6ff3e153807d0d2c9e465c88b398ff6e8dcf9f6edc1ceef0852b080aa\
5aee739"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
Refinement.nb"], "Hash" -> 
                    "8a608988cf809a26aa30a970f490ae3e2e46eef01a95c6a995482b68a\
599e905"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
RefinementPlot.nb"], "Hash" -> 
                    "a5feac578c975a31c97079a24be829ca0e344303be32c1f77711b4a55\
cfde206"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
RootEpsilon.nb"], "Hash" -> 
                    "872b41bd6bccdcd3c6aa9448880c018b81b74f4ec0f22b18113854bf7\
cbce8b5"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
SchDebug.nb"], "Hash" -> 
                    "1a36f36dc6758adae6c8a2d9465c3ba9f86f4cf61e8db5017bf7e92ba\
048a462"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
SchTable.nb"], "Hash" -> 
                    "a1f06fbd68c6f9f085f2ec9ce75d063b5922c9f77a61dafa6db5b648a\
6e04b88"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
SchwarzschildMode.nb"], "Hash" -> 
                    "95707a39456f680cac0720608ed68d067dea4c478067b88f22e4534b6\
3592de8"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
SchwarzschildOmega.nb"], "Hash" -> 
                    "d3fc1fdf5825ce9090de491677d76ddf94ca2290e567efde71bb9ab3e\
19107aa"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
SelectMode.nb"], "Hash" -> 
                    "1050039d86dcd520229a4d299a3da1c9c802049d41c9f890edf61282f\
0a365a5"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
SeqDirection.nb"], "Hash" -> 
                    "b97441b122bfa87c2fd829684b56460957e5aba0cb5774bba1a145e12\
a3227d1"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
SetSpinWeight.nb"], "Hash" -> 
                    "5b57ecfca9a7e9283044814e55401fa2552daabf55e1b61496e3ebb81\
8b14dee"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ShortenBy.nb"], "Hash" -> 
                    "7eec70a0e8982657724f44a87228b073801338ed4d63566904d3be455\
6307e37"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
ShortenModeSequence.nb"], "Hash" -> 
                    "48fa3b3f0848208fee72379efa098eb3629e8f0782ee4611aef68eca3\
35359bf"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
SolutionDebug.nb"], "Hash" -> 
                    "c8e84ee4fe87d06f3cca26bb2a0007344bc191b97a0ced6f159ef4c86\
e23bc57"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
SolutionIter.nb"], "Hash" -> 
                    "4b0c27241fb8449e8af86398f086e2467eae897e824a967d5ffeb3f0a\
b8eaf66"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
SolutionOscillate.nb"], "Hash" -> 
                    "b760d10b17eff6874193e0ac2af9dcb5772297d306c44749908a91729\
69f0b2f"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
SolutionRelax.nb"], "Hash" -> 
                    "d2f3f9dae9d802f262ef162d7c5acf7c77af0c54e7d6638673be5df95\
c8a6c2c"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
SolutionSlow.nb"], "Hash" -> 
                    "aaa5f26dfe6ef026ecb0a3571282f2d54d7eb6e78421bb622bc0f61f8\
7e6687d"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
SolutionWindowl.nb"], "Hash" -> 
                    "ba89f5d65f5d9ef0b1e880efdd30411fd0e46a337b7d8a9de4cc16889\
a4dc948"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
SolutionWindowt.nb"], "Hash" -> 
                    "bab8e8daecc81be20922d16d945952bf6c4fc28dfe5ef29a0b0c7d1ad\
94d1e6e"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
SpinWeight.nb"], "Hash" -> 
                    "261f38c17ea3ab1aace472c62fafa118dacf5a40c9907e39b3d0a1437\
154a82e"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
SWSFLists.nb"], "Hash" -> 
                    "ab04d1b8d617fbd1da6c22414d41323e4cbc9095891a4f6c4d0c25e5a\
8de3685"|>}|>, "AllowEmbedding" -> True, "InitialShape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, All, 
                    TypeSystem`PackageScope`KeyDummy[1]} -> 
                    1, {All, All, "File"} -> 1, {All, All, "Hash"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[56.00000000000001], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|
                    "File" -> TypeSystem`PackageScope`AtomShape[60], "Hash" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 2, {All, All}]], 20, 
                    DirectedInfinity[1], {All}]]], 1, 
                    DirectedInfinity[1], {}]], "InitialType" -> 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Struct[{"File", "Hash"}, {
                    TypeSystem`Atom[File], 
                    TypeSystem`Atom[String]}], 66], 1], "Meta" -> <||>, 
                    "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, All, 
                    TypeSystem`PackageScope`KeyDummy[1]} -> 
                    1, {All, All, "File"} -> 1, {All, All, "Hash"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[56.00000000000001], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|
                    "File" -> TypeSystem`PackageScope`AtomShape[60], "Hash" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 2, {All, All}]], 20, 
                    DirectedInfinity[1], {All}]]], 1, 
                    DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Struct[{"File", "Hash"}, {
                    TypeSystem`Atom[File], 
                    TypeSystem`Atom[String]}], 66], 1], "Path" -> {}, 
                    "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 2, 
                    "DataRowCount" -> 1, "DataColumnCount" -> 2, 
                    "SortPaths" -> {}, "SortDirections" -> {}, 
                    "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                    DynamicModule[{
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                    Style[
                    Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    Mouseover[
                    
                    Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]], 
                    Graphics[{
                    GrayLevel[0.6], 
                    
                    Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, Keys}, "KeyDummy", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["File", 
                    Style[
                    "File", FontColor -> RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "File"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "File"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Hash", 
                    Style[
                    "Hash", FontColor -> RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "Hash"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "Hash"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Files", 
                    Style[
                    "Files", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Files"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/KerrModes.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 1, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "362be7398219b38974ee603bce6e24c08246972f3ed7907eb24f19562\
87f797a", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 1, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Documentation/English/Guides/ModesOfKerr.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 2, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "ad92411de635540ee66f021ff058cd2e42c3513dd77cb8033a4b9561a\
49e62bb", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 2, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
AngularModeRealPath.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 3, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "052128d408df89a2db6f33d42c1e569abef8cbb64ede572a9f0076589\
70a82c7", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 3, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
CurvatureRatio.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 4, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "12dd67de91de795acbfd2a928e28e9d8e605c681c0bdfd39815003d7f\
30bb0ba", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 4, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
ExtrapolationOrder.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 5, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "8d65269be5e1beb21f3a176090f6ae1803d49e9f0f98b71d5bfa0275a\
920c9bd", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 5, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
ForceRefinement.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 6, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "44130e1da17ccdd68c61b786b1a21390d15c997a68463c60cb81d0d0c\
9a7d39e", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 6, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/Index.nb"], 
                    
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 7, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "2734ae6f900e0196574e4db7251596c4b1eab01d9171b0903e4bc256b\
e84ff73", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 7, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
JacobianStep.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 8, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "082a82592c2c5a3c2ba9011c346f75dc267be2273f14c281483bd3c45\
407d849", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 8, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/KerraAList.\
nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 9, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "d6aa9b5bfe2feb1d7882aa6192cb5bf6d58324452f353f46b3568374a\
c208292", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 9, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/KerraAListS.\
nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 10, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "815ca0d5e815a2da7a2da32a4bae8cda2f26fe95bf48db5c6dfc17af4\
3abed92", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 10, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/KerrAList.\
nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 11, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "b54e0c48c426053f054dad381a2bc03769127e5f474f0cadebf48f0e9\
500bbb3", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 11, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/KerrAListS.\
nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 12, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "273b1dd3c0679ef4e4b1edc439f0bee7b0b7d3683e823e0c15149215c\
62d2679", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 12, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
KerraOmegaList.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 13, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "eb42e19ccf46860d496900a36fafaf345bb2827329c697db6b83f0720\
255eab7", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 13, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
KerraOmegaListS.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 14, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "0fb244e8533e6eb821894cf2d322ba5146000d4ece32d61a8d50baed2\
210e37d", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 14, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
KerrModeMakeMultiplet.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 15, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "914bc12f156387e50960e2caa14bb90029fed7e777da59c7e6d843183\
a01253a", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 15, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
KerrModeRefineSequence.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 16, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "074f6bddf77e36ff6c22deb71c6d5d22d47fe706c2d264691b789cb8c\
4efbf21", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 16, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
KerrModeSequence.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 17, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "f035cb57d3cb4fb8c407b0a0d4a0d6bf97c0289d08b8dc98f785ce148\
3029d14", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 17, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
KerrOmegaList.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 18, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "1f2c36bdaceb2961a7abfb07f51a6235a16f18d1053551fb63fb0927e\
b8e1770", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 18, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
KerrOmegaListS.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 19, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "8925f3c3bb22578d40ac5df89752d9beba4ae8e30260699de2629b430\
1a705ce", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 19, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
LimitRefinement.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 20, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "e757b46a54ee35b7cce22801722b381724976805a5fb6bcda081f90e9\
a85a2f5", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 20, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Superscript["66 total \:203a ", ""], 
                    Style[
                    Superscript["66 total \:203a ", ""], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Files"]}, 2]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"]}, "Item", False], "Mouse"], 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 More Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 More Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Show 1 Fewer Row at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 Fewer Rows at This Level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
                    Background -> GrayLevel[0.98]], SpanFromLeft}}, 
                    BaseStyle -> {
                    ContextMenu -> 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{
                    TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = {
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                    "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                    Dividers -> All, FrameStyle -> 
                    GrayLevel[0.7490196078431373], Spacings -> {0, 0}, 
                    Alignment -> Left, 
                    BaseStyle -> {
                    FontFamily -> "Source Sans Pro", FontSize -> 14, 
                    FontWeight -> Plain}], LineBreakWithin -> False, 
                    ContextMenu -> {}, NumberMarks -> False, ShowAutoStyles -> 
                    False]], TypeSystem`NestedGrid`PackagePrivate`initialQ = 
                    True}, 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`datasetData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
                    DynamicModuleValues :> {}], 
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`SubViewPathbar[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = 
                    Style[
                    Framed[
                    Dynamic[
                    Replace[
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                    Blank[]] -> "", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                    Blank[]], 
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                    Blank[]], 
                    Pattern[
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Blank[]]] :> (
                    Increment[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                    TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader = TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path$, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                    Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
                    FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
                    Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 
                    1], TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$\
}, 
                    DynamicWrapperBox[
                    DynamicBox[
                    ToBoxes[
                    Dataset`DatasetContent[
                    2, "Path" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
                    "Grid" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    "VPos" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
                    "TopBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
                    "BottomBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
                    "OutputID" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
                    StandardForm], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                    MouseAnnotation[]], 
                    Initialization :> (
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
                    CreateUUID[]), DynamicModuleValues :> {}, 
                    BaseStyle -> {LineBreakWithin -> False}, 
                    UnsavedVariables :> {
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}], 
                    Deploy, DefaultBaseStyle -> "Deploy"], 
                   Dataset`InterpretDataset[1], Selectable -> False, Editable -> 
                   False, SelectWithContents -> True], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  
                  TemplateBox[{"\"DocumentationBuildResults\"", "\": \""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    InterpretationBox[
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Documentation build completed successfully.\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.001156`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Documentation build completed successfully.\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.001156`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"MaximumFileTime\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"ProcessedFiles\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"FailedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PercentSucceeded\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"Indeterminate", "\"%\"", "percent", 
                    "\"Percent\""}, "QuantityPostfix", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"ProcessedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"SuccessfulFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"SkippedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"DocumentationBuild\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    Success[
                    "DocumentationBuild", <|
                    "TotalTime" -> Quantity[0.001156, "Seconds"], 
                    "MaximumFileTime" -> <||>, "ProcessedFiles" -> <||>, 
                    "FailedFilesCount" -> 0, "PercentSucceeded" -> 
                    Quantity[Indeterminate, "Percent"], "ProcessedFilesCount" -> 
                    0, "SuccessfulFilesCount" -> 0, "SkippedFilesCount" -> 0, 
                    "MessageTemplate" -> 
                    "Documentation build completed successfully."|>], 
                    Selectable -> False, Editable -> False, 
                    SelectWithContents -> True], "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\"PacletBuild\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Success[
  "PacletBuild", <|
   "PacletArchive" -> 
    "/home/cookgb/Research/PublicPaclets/KerrModes/KerrModes/build/KerrModes-\
1.0.0.paclet", "TotalTime" -> Quantity[4.501117, "Seconds"], "PacletManifest" -> 
    Dataset[<|"Files" -> {<|
         "File" -> File["Kernel/KerrModes.wl"], "Hash" -> 
          "362be7398219b38974ee603bce6e24c08246972f3ed7907eb24f1956287f797a"|>\
, <|"File" -> File["Documentation/English/Guides/ModesOfKerr.nb"], "Hash" -> 
          "ad92411de635540ee66f021ff058cd2e42c3513dd77cb8033a4b9561a49e62bb"|>\
, <|"File" -> File[
           "Documentation/English/ReferencePages/Symbols/AngularModeRealPath.\
nb"], "Hash" -> 
          "052128d408df89a2db6f33d42c1e569abef8cbb64ede572a9f007658970a82c7"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/CurvatureRatio.\
nb"], "Hash" -> 
          "12dd67de91de795acbfd2a928e28e9d8e605c681c0bdfd39815003d7f30bb0ba"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/\
ExtrapolationOrder.nb"], "Hash" -> 
          "8d65269be5e1beb21f3a176090f6ae1803d49e9f0f98b71d5bfa0275a920c9bd"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/ForceRefinement.\
nb"], "Hash" -> 
          "44130e1da17ccdd68c61b786b1a21390d15c997a68463c60cb81d0d0c9a7d39e"|>\
, <|"File" -> File["Documentation/English/ReferencePages/Symbols/Index.nb"], 
          "Hash" -> 
          "2734ae6f900e0196574e4db7251596c4b1eab01d9171b0903e4bc256be84ff73"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/JacobianStep.nb"]\
, "Hash" -> 
          "082a82592c2c5a3c2ba9011c346f75dc267be2273f14c281483bd3c45407d849"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/KerraAList.nb"], 
          "Hash" -> 
          "d6aa9b5bfe2feb1d7882aa6192cb5bf6d58324452f353f46b3568374ac208292"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/KerraAListS.nb"],
           "Hash" -> 
          "815ca0d5e815a2da7a2da32a4bae8cda2f26fe95bf48db5c6dfc17af43abed92"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/KerrAList.nb"], 
          "Hash" -> 
          "b54e0c48c426053f054dad381a2bc03769127e5f474f0cadebf48f0e9500bbb3"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/KerrAListS.nb"], 
          "Hash" -> 
          "273b1dd3c0679ef4e4b1edc439f0bee7b0b7d3683e823e0c15149215c62d2679"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/KerraOmegaList.\
nb"], "Hash" -> 
          "eb42e19ccf46860d496900a36fafaf345bb2827329c697db6b83f0720255eab7"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/KerraOmegaListS.\
nb"], "Hash" -> 
          "0fb244e8533e6eb821894cf2d322ba5146000d4ece32d61a8d50baed2210e37d"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/\
KerrModeMakeMultiplet.nb"], "Hash" -> 
          "914bc12f156387e50960e2caa14bb90029fed7e777da59c7e6d843183a01253a"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/\
KerrModeRefineSequence.nb"], "Hash" -> 
          "074f6bddf77e36ff6c22deb71c6d5d22d47fe706c2d264691b789cb8c4efbf21"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/KerrModeSequence.\
nb"], "Hash" -> 
          "f035cb57d3cb4fb8c407b0a0d4a0d6bf97c0289d08b8dc98f785ce1483029d14"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/KerrOmegaList.\
nb"], "Hash" -> 
          "1f2c36bdaceb2961a7abfb07f51a6235a16f18d1053551fb63fb0927eb8e1770"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/KerrOmegaListS.\
nb"], "Hash" -> 
          "8925f3c3bb22578d40ac5df89752d9beba4ae8e30260699de2629b4301a705ce"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/LimitRefinement.\
nb"], "Hash" -> 
          "e757b46a54ee35b7cce22801722b381724976805a5fb6bcda081f90e9a85a2f5"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/Maxblevel.nb"], 
          "Hash" -> 
          "3b341e1c1f6c18d7c2392ec78eef5dcd4988fbdbdc72dfdcc82c65ab1161d0da"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/MaxDeltaOmega.\
nb"], "Hash" -> 
          "2e454a06b4b069e9de2d4c9263a06486abcbbcd20df2015104e204340f5b7751"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/MaximalaEpsilon.\
nb"], "Hash" -> 
          "9aa4777e34eeeea1a810912f53b97fcb573d7ba820c4a57d4849dad26b10f9c8"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/Minblevel.nb"], 
          "Hash" -> 
          "75b094ec3cefc07b211a0ae3fea3feaca2b3303cfc8f922f576851751811d119"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/MinimalaEpsilon.\
nb"], "Hash" -> 
          "f23c81e01fd84dabbcfb248597028a650bc2a9510a4429a4842880edb8099d7f"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/ModeaStart.nb"], 
          "Hash" -> 
          "87c828f3831edf183e0a2cf2e25fa6ebc81d398f7a70b82a2a5196c64e098488"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/ModeGuess.nb"], 
          "Hash" -> 
          "ffe5d300326fbf577f4db37ea2d64f24a0ae3664ab16b25282397cb4f98d7b71"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/ModePlotA.nb"], 
          "Hash" -> 
          "e0f08dd9bd8e2a2bbbec1c214c2247a6412277a03c4b055f5e017eb3c4d6882a"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/ModePlotOmega.\
nb"], "Hash" -> 
          "7e5173e1765e1f8607916d73701e1164ac88c1678ab3e68de4b91f32446fddbf"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/\
ModePlotOmegaTones.nb"], "Hash" -> 
          "db62d85fb5c4d98fbacdb9946ea2f92f72d8eb57f07ed7d05e88eba8a56869a2"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/ModePrecision.\
nb"], "Hash" -> 
          "41003aeb35f06eeeeedb095e24bb5ce9d2cca3f1f909014f2c48c92bf6c295cb"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/ModeSolution.nb"]\
, "Hash" -> 
          "1fc7b5cdb4f61189219cd0a50163abc69f75f77d637082625a62456438906f89"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/ModeType.nb"], 
          "Hash" -> 
          "2967f27ca87262e4562233e3bcb205e1b2b8deb55cce4b788fb3bbca3f4f26e0"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/NewtonRadius.nb"]\
, "Hash" -> 
          "5868e561e8403098d265c8c4f21eac2b4963d58be4ff73dc7cbe14f667dad526"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/NoNegOmega.nb"], 
          "Hash" -> 
          "a2ecdfcee635594e7a916ef3794d9adbce27f4aff8435fe600b31043bb9344c2"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/OTmultiple.nb"], 
          "Hash" -> 
          "b326f5329dbc8aa43768ddc039a1fbb3e0eef92863b5b234f859902febfc2fc5"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/OutputType.nb"], 
          "Hash" -> 
          "043ecb4c087bf3b5140e6fbf34c811e9be91f81c858a9e5bb9ca373b23e54de7"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/PlotModeFunction.\
nb"], "Hash" -> 
          "6d60318dff5721176fb8d7a750b8104b4f5a4bd7f7c526ff00462f152b7e29c5"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/RadialCFDepth.\
nb"], "Hash" -> 
          "11fc8f190a9733cefc6c69eb122c59fd52f23f6f401c1d7c01e95379a45de836"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/RadialCFMaxGuess.\
nb"], "Hash" -> 
          "53056b1e909c5533cd00bbe2097f5f4d55cc5bd55f1005b34b616351175f514f"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/RadialCFMinDepth.\
nb"], "Hash" -> 
          "7ccbaee76f432a802dd59516bb120c77724d6c69885f0f63431e97e1669003ce"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/RadialDebug.nb"],
           "Hash" -> 
          "dd580cd3713c948a14ee009bc9de5377add4f613ecc213ca0f9290d3eef58273"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/RadialLentzRoot.\
nb"], "Hash" -> 
          "dc817f386553b45d03b4aa12727db03989c23b72d0036875ebd75a563102a13b"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/RadialRelax.nb"],
           "Hash" -> 
          "6371245b37a0d75d66daba7d1f54b9a7f631cb3f3dfe26210e38de2c7a6fd57e"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/RefinementAction.\
nb"], "Hash" -> 
          "6ff3e153807d0d2c9e465c88b398ff6e8dcf9f6edc1ceef0852b080aa5aee739"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/Refinement.nb"], 
          "Hash" -> 
          "8a608988cf809a26aa30a970f490ae3e2e46eef01a95c6a995482b68a599e905"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/RefinementPlot.\
nb"], "Hash" -> 
          "a5feac578c975a31c97079a24be829ca0e344303be32c1f77711b4a55cfde206"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/RootEpsilon.nb"],
           "Hash" -> 
          "872b41bd6bccdcd3c6aa9448880c018b81b74f4ec0f22b18113854bf7cbce8b5"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/SchDebug.nb"], 
          "Hash" -> 
          "1a36f36dc6758adae6c8a2d9465c3ba9f86f4cf61e8db5017bf7e92ba048a462"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/SchTable.nb"], 
          "Hash" -> 
          "a1f06fbd68c6f9f085f2ec9ce75d063b5922c9f77a61dafa6db5b648a6e04b88"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/\
SchwarzschildMode.nb"], "Hash" -> 
          "95707a39456f680cac0720608ed68d067dea4c478067b88f22e4534b63592de8"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/\
SchwarzschildOmega.nb"], "Hash" -> 
          "d3fc1fdf5825ce9090de491677d76ddf94ca2290e567efde71bb9ab3e19107aa"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/SelectMode.nb"], 
          "Hash" -> 
          "1050039d86dcd520229a4d299a3da1c9c802049d41c9f890edf61282f0a365a5"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/SeqDirection.nb"]\
, "Hash" -> 
          "b97441b122bfa87c2fd829684b56460957e5aba0cb5774bba1a145e12a3227d1"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/SetSpinWeight.\
nb"], "Hash" -> 
          "5b57ecfca9a7e9283044814e55401fa2552daabf55e1b61496e3ebb818b14dee"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/ShortenBy.nb"], 
          "Hash" -> 
          "7eec70a0e8982657724f44a87228b073801338ed4d63566904d3be4556307e37"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/\
ShortenModeSequence.nb"], "Hash" -> 
          "48fa3b3f0848208fee72379efa098eb3629e8f0782ee4611aef68eca335359bf"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/SolutionDebug.\
nb"], "Hash" -> 
          "c8e84ee4fe87d06f3cca26bb2a0007344bc191b97a0ced6f159ef4c86e23bc57"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/SolutionIter.nb"]\
, "Hash" -> 
          "4b0c27241fb8449e8af86398f086e2467eae897e824a967d5ffeb3f0ab8eaf66"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/\
SolutionOscillate.nb"], "Hash" -> 
          "b760d10b17eff6874193e0ac2af9dcb5772297d306c44749908a9172969f0b2f"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/SolutionRelax.\
nb"], "Hash" -> 
          "d2f3f9dae9d802f262ef162d7c5acf7c77af0c54e7d6638673be5df95c8a6c2c"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/SolutionSlow.nb"]\
, "Hash" -> 
          "aaa5f26dfe6ef026ecb0a3571282f2d54d7eb6e78421bb622bc0f61f87e6687d"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/SolutionWindowl.\
nb"], "Hash" -> 
          "ba89f5d65f5d9ef0b1e880efdd30411fd0e46a337b7d8a9de4cc16889a4dc948"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/SolutionWindowt.\
nb"], "Hash" -> 
          "bab8e8daecc81be20922d16d945952bf6c4fc28dfe5ef29a0b0c7d1ad94d1e6e"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/SpinWeight.nb"], 
          "Hash" -> 
          "261f38c17ea3ab1aace472c62fafa118dacf5a40c9907e39b3d0a1437154a82e"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/SWSFLists.nb"], 
          "Hash" -> 
          "ab04d1b8d617fbd1da6c22414d41323e4cbc9095891a4f6c4d0c25e5a8de3685"|>\
}|>, 
      TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Vector[
        TypeSystem`Struct[{"File", "Hash"}, {
          TypeSystem`Atom[File], 
          TypeSystem`Atom[String]}], 66], 1], <||>], 
    "DocumentationBuildResults" -> {
      Success[
      "DocumentationBuild", <|
       "TotalTime" -> Quantity[0.001156, "Seconds"], 
        "MaximumFileTime" -> <||>, "ProcessedFiles" -> <||>, 
        "FailedFilesCount" -> 0, "PercentSucceeded" -> 
        Quantity[Indeterminate, "Percent"], "ProcessedFilesCount" -> 0, 
        "SuccessfulFilesCount" -> 0, "SkippedFilesCount" -> 0, 
        "MessageTemplate" -> 
        "Documentation build completed successfully."|>]}|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.880731991272037*^9, 3.8807328925952997`*^9, {3.880795166810657*^9, 
   3.880795189533051*^9}, 3.8807955637598133`*^9, 3.880795705997843*^9, 
   3.880795867995636*^9, 3.880795932037758*^9, 3.8807959869565*^9, 
   3.880796252847912*^9, 3.88079883367443*^9, 3.8807989459758787`*^9, 
   3.880798988376904*^9, 3.8807990829230013`*^9, 3.880799189795631*^9, 
   3.88079963271525*^9, 3.880800422682536*^9, 3.88083446409231*^9, 
   3.881078910706217*^9, 3.881082636000931*^9, 3.8810893842049303`*^9, 
   3.881089423854784*^9, 3.881598431212634*^9, 3.882128300134737*^9, 
   3.882130226811043*^9, 3.88213074307502*^9, 3.8821312649660587`*^9, 
   3.8822145766535883`*^9, 3.88226331045533*^9, 3.882267458982009*^9, 
   3.882291644371335*^9, 3.8823496923771667`*^9, 3.882349817580173*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"312c34d6-d380-4688-9a4a-f85f5df20b0f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"result", "[", "2", "]"}], "=", 
  RowBox[{"PacletBuild", "[", 
   RowBox[{"PacletDir", "<>", "\"\</KerrQNM\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.879501362564122*^9, 3.879501378042837*^9}, 
   3.879501564345615*^9, {3.879501688591901*^9, 3.879501736852374*^9}, {
   3.8795018248538218`*^9, 3.879501828090248*^9}, {3.879501926874854*^9, 
   3.879501980371121*^9}, 3.880726103918172*^9, 3.8807273816323233`*^9},
 CellLabel->"In[6]:=",ExpressionUUID->"9f2b4b6a-8fed-4f4c-8e0f-d53e5d105392"],

Cell[BoxData[
 TemplateBox[{
  "DocumentationBuild`Info`GetNotebookHistoryData", "notfound", 
   "\"Could not find the history data for Excised\"", 2, 6, 9, 
   19309420012344080692, "Local", 
   "DocumentationBuild`Info`GetNotebookHistoryData"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.882214591826219*^9, 3.882263317257839*^9, 
  3.88229164981479*^9, 3.882349823098192*^9},
 CellLabel->
  "During evaluation of \
In[6]:=",ExpressionUUID->"6a2d64cd-44ec-4c91-b74b-055243c64c7f"],

Cell[BoxData[
 TemplateBox[{
  "DocumentationBuild`Info`GetNotebookHistoryData", "notfound", 
   "\"Could not find the history data for Excised\"", 2, 6, 10, 
   19309420012344080692, "Local", 
   "DocumentationBuild`Info`GetNotebookHistoryData"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.882214591826219*^9, 3.882263317257839*^9, 
  3.88229164981479*^9, 3.88234982314607*^9},
 CellLabel->
  "During evaluation of \
In[6]:=",ExpressionUUID->"e0ace673-44ab-4f33-a54b-ac0ba76fa020"],

Cell[BoxData[
 TemplateBox[{
  "DocumentationBuild`Info`GetNotebookHistoryData", "notfound", 
   "\"Could not find the history data for Excised\"", 2, 6, 11, 
   19309420012344080692, "Local", 
   "DocumentationBuild`Info`GetNotebookHistoryData"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.882214591826219*^9, 3.882263317257839*^9, 
  3.88229164981479*^9, 3.882349823156028*^9},
 CellLabel->
  "During evaluation of \
In[6]:=",ExpressionUUID->"a24064f9-b6cc-42f1-9655-c46cbe53267e"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \
\\!\\(\\*StyleBox[RowBox[{\\\"DocumentationBuild`Info`GetNotebookHistoryData\\\
\", \\\"::\\\", \\\"notfound\\\"}], \\\"MessageName\\\"]\\) will be \
suppressed during this calculation.\"", 2, 6, 12, 19309420012344080692, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.882214591826219*^9, 3.882263317257839*^9, 
  3.88229164981479*^9, 3.882349823164062*^9},
 CellLabel->
  "During evaluation of \
In[6]:=",ExpressionUUID->"bfefbebd-cb45-4a3f-8a6c-5d30f1c3e97d"],

Cell[BoxData[
 TemplateBox[{
  "DocumentationBuild`Info`GetNotebookHistoryData", "notfound", 
   "\"Could not find the history data for Excised\"", 2, 6, 13, 
   19309420012344080692, "Local", 
   "DocumentationBuild`Info`GetNotebookHistoryData"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.882214591826219*^9, 3.882263317257839*^9, 
  3.88229164981479*^9, 3.8823498233635273`*^9},
 CellLabel->
  "During evaluation of \
In[6]:=",ExpressionUUID->"b4a39732-1398-4773-b77f-cf097ad82b7d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["Success",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            FrameBox[
             StyleBox["\"\[Checkmark]\"", 
              Directive[
               RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
               25], StripOnInput -> False], ContentPadding -> False, 
             FrameStyle -> None, FrameMargins -> {{0, 0}, {0, 0}}, 
             StripOnInput -> False], 
            GridBox[{{
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"PacletArchive\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                 "\"/home/cookgb/Research/PublicPaclets/KerrModes/KerrQNM/\
build/KerrQNM-1.0.0.paclet\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "7.974241`", "\"s\"", "seconds", "\"Seconds\""}, 
                   "Quantity", SyntaxForm -> Mod], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            FrameBox[
             StyleBox["\"\[Checkmark]\"", 
              Directive[
               RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
               25], StripOnInput -> False], ContentPadding -> False, 
             FrameStyle -> None, FrameMargins -> {{0, 0}, {0, 0}}, 
             StripOnInput -> False], 
            GridBox[{{
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"PacletArchive\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                 "\"/home/cookgb/Research/PublicPaclets/KerrModes/KerrQNM/\
build/KerrQNM-1.0.0.paclet\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "7.974241`", "\"s\"", "seconds", "\"Seconds\""}, 
                   "Quantity", SyntaxForm -> Mod], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"PacletManifest\"", "\": \""}, "RowDefault"],
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   TagBox[
                    
                    DynamicModuleBox[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
                    "InitialData" -> <|
                    "Files" -> {<|
                    "File" -> File["Kernel/KerrQNM.wl"], "Hash" -> 
                    "438926c71c67234b9d0f0b94edb2e7ee8ce1224e5beb971a4611edaf1\
3079ce5"|>, <|"File" -> 
                    File["Documentation/English/Guides/KerrQuasi-NormalModes.\
nb"], "Hash" -> 
                    "e46e8dbeec5e151ec4f643bda93987344821d0140d39d5ee4d23fe972\
046ea81"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
KerrQNMRefineSequence.nb"], "Hash" -> 
                    "f2944fa9f890a2119f0c48054547b769572c8b0226b0ac120a4ba187d\
fb320d6"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
KerrQNMSequence.nb"], "Hash" -> 
                    "92c7518d4b2ea10e3d2968f6aa3f6cd5bb8cf625ca833010d15a09d55\
1b8de95"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
PlotSchQNM.nb"], "Hash" -> 
                    "c2aa1cda5839fb12c5b3dfa4179a6ab3edaea69c545cf7790c1ed79b7\
4c37195"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
SchwarzschildQNM.nb"], "Hash" -> 
                    "15d5fa74af016eea7e656bd48cd872dca967601b673f83e78c26b690d\
0a7df3a"|>}|>, "AllowEmbedding" -> True, "InitialShape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, All, 
                    TypeSystem`PackageScope`KeyDummy[2]} -> 
                    1, {All, All, "File"} -> 1, {All, All, "Hash"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[56.00000000000001], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|
                    "File" -> TypeSystem`PackageScope`AtomShape[60], "Hash" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 2, {All, All}]], 6, 
                    DirectedInfinity[1], {All}]]], 1, 
                    DirectedInfinity[1], {}]], "InitialType" -> 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Struct[{"File", "Hash"}, {
                    TypeSystem`Atom[File], 
                    TypeSystem`Atom[String]}], 6], 1], "Meta" -> <||>, 
                    "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, All, 
                    TypeSystem`PackageScope`KeyDummy[2]} -> 
                    1, {All, All, "File"} -> 1, {All, All, "Hash"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[56.00000000000001], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|
                    "File" -> TypeSystem`PackageScope`AtomShape[60], "Hash" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 2, {All, All}]], 6, 
                    DirectedInfinity[1], {All}]]], 1, 
                    DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Struct[{"File", "Hash"}, {
                    TypeSystem`Atom[File], 
                    TypeSystem`Atom[String]}], 6], 1], "Path" -> {}, 
                    "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 2, 
                    "DataRowCount" -> 1, "DataColumnCount" -> 2, 
                    "SortPaths" -> {}, "SortDirections" -> {}, 
                    "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                    DynamicModule[{
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                    Style[
                    Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    Mouseover[
                    
                    Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]], 
                    Graphics[{
                    GrayLevel[0.6], 
                    
                    Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, Keys}, "KeyDummy", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["File", 
                    Style[
                    "File", FontColor -> RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "File"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "File"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Hash", 
                    Style[
                    "Hash", FontColor -> RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "Hash"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "Hash"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Files", 
                    Style[
                    "Files", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Files"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/KerrQNM.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 1, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "438926c71c67234b9d0f0b94edb2e7ee8ce1224e5beb971a4611edaf1\
3079ce5", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 1, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/Guides/KerrQuasi-NormalModes.nb"], 
                    
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 2, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "e46e8dbeec5e151ec4f643bda93987344821d0140d39d5ee4d23fe972\
046ea81", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 2, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
KerrQNMRefineSequence.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 3, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "f2944fa9f890a2119f0c48054547b769572c8b0226b0ac120a4ba187d\
fb320d6", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 3, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
KerrQNMSequence.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 4, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "92c7518d4b2ea10e3d2968f6aa3f6cd5bb8cf625ca833010d15a09d55\
1b8de95", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 4, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/PlotSchQNM.\
nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 5, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "c2aa1cda5839fb12c5b3dfa4179a6ab3edaea69c545cf7790c1ed79b7\
4c37195", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 5, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
SchwarzschildQNM.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 6, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "15d5fa74af016eea7e656bd48cd872dca967601b673f83e78c26b690d\
0a7df3a", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 6, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}}, 
                    BaseStyle -> {
                    ContextMenu -> 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                    "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                    Dividers -> All, FrameStyle -> 
                    GrayLevel[0.7490196078431373], Spacings -> {0, 0}, 
                    Alignment -> Left, 
                    BaseStyle -> {
                    FontFamily -> "Source Sans Pro", FontSize -> 14, 
                    FontWeight -> Plain}], LineBreakWithin -> False, 
                    ContextMenu -> {}, NumberMarks -> False, ShowAutoStyles -> 
                    False]], TypeSystem`NestedGrid`PackagePrivate`initialQ = 
                    True}, 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`datasetData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
                    DynamicModuleValues :> {}], 
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`SubViewPathbar[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = 
                    Style[
                    Framed[
                    Dynamic[
                    Replace[
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                    Blank[]] -> "", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                    Blank[]], 
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                    Blank[]], 
                    Pattern[
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Blank[]]] :> (
                    Increment[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                    TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader = TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path$, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                    Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
                    FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
                    Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 
                    1], TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$\
}, 
                    DynamicWrapperBox[
                    DynamicBox[
                    ToBoxes[
                    Dataset`DatasetContent[
                    2, "Path" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
                    "Grid" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    "VPos" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
                    "TopBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
                    "BottomBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
                    "OutputID" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
                    StandardForm], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                    MouseAnnotation[]], 
                    Initialization :> (
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
                    CreateUUID[]), DynamicModuleValues :> {}, 
                    BaseStyle -> {LineBreakWithin -> False}, 
                    UnsavedVariables :> {
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}], 
                    Deploy, DefaultBaseStyle -> "Deploy"], 
                   Dataset`InterpretDataset[1], Selectable -> False, Editable -> 
                   False, SelectWithContents -> True], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  
                  TemplateBox[{"\"DocumentationBuildResults\"", "\": \""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    InterpretationBox[
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Documentation build completed successfully.\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.263044`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Documentation build completed successfully.\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    TemplateBox[{"2.263044`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"MaximumFileTime\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    
                    TemplateBox[{"2.189446`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], ",", 
                    "\"/home/cookgb/Research/PublicPaclets/KerrModes/KerrQNM/\
Documentation/English/Guides/KerrQuasi-NormalModes.nb\""}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"ProcessedFiles\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"\[LeftAssociation]", 
                    
                    RowBox[{
                    "\"/home/cookgb/Research/PublicPaclets/KerrModes/KerrQNM/\
Documentation/English/Guides/KerrQuasi-NormalModes.nb\"", "\[Rule]", 
                    InterpretationBox[
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.189446`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.189446`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    Success[
                    "BuildDocumentationNotebook", <|
                    "Time" -> Quantity[2.189446, "Seconds"]|>], Selectable -> 
                    False, Editable -> False, SelectWithContents -> True]}], 
                    "\[RightAssociation]"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"FailedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PercentSucceeded\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"100.`", "\"%\"", "percent", "\"Percent\""}, 
                    "QuantityPostfix", SyntaxForm -> Mod], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"ProcessedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"SuccessfulFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"SkippedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"DocumentationBuild\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    Success[
                    "DocumentationBuild", <|
                    "TotalTime" -> Quantity[2.263044, "Seconds"], 
                    "MaximumFileTime" -> {
                    Quantity[2.189446, "Seconds"], 
                    "/home/cookgb/Research/PublicPaclets/KerrModes/KerrQNM/\
Documentation/English/Guides/KerrQuasi-NormalModes.nb"}, 
                    "ProcessedFiles" -> <|
                    "/home/cookgb/Research/PublicPaclets/KerrModes/KerrQNM/\
Documentation/English/Guides/KerrQuasi-NormalModes.nb" -> 
                    Success[
                    "BuildDocumentationNotebook", <|
                    "Time" -> Quantity[2.189446, "Seconds"]|>]|>, 
                    "FailedFilesCount" -> 0, "PercentSucceeded" -> 
                    Quantity[100., "Percent"], "ProcessedFilesCount" -> 1, 
                    "SuccessfulFilesCount" -> 1, "SkippedFilesCount" -> 0, 
                    "MessageTemplate" -> 
                    "Documentation build completed successfully."|>], 
                    Selectable -> False, Editable -> False, 
                    SelectWithContents -> True], "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\"PacletBuild\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Success[
  "PacletBuild", <|
   "PacletArchive" -> 
    "/home/cookgb/Research/PublicPaclets/KerrModes/KerrQNM/build/KerrQNM-1.0.\
0.paclet", "TotalTime" -> Quantity[7.974241, "Seconds"], "PacletManifest" -> 
    Dataset[<|"Files" -> {<|
         "File" -> File["Kernel/KerrQNM.wl"], "Hash" -> 
          "438926c71c67234b9d0f0b94edb2e7ee8ce1224e5beb971a4611edaf13079ce5"|>\
, <|"File" -> File["Documentation/English/Guides/KerrQuasi-NormalModes.nb"], 
          "Hash" -> 
          "e46e8dbeec5e151ec4f643bda93987344821d0140d39d5ee4d23fe972046ea81"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/\
KerrQNMRefineSequence.nb"], "Hash" -> 
          "f2944fa9f890a2119f0c48054547b769572c8b0226b0ac120a4ba187dfb320d6"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/KerrQNMSequence.\
nb"], "Hash" -> 
          "92c7518d4b2ea10e3d2968f6aa3f6cd5bb8cf625ca833010d15a09d551b8de95"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/PlotSchQNM.nb"], 
          "Hash" -> 
          "c2aa1cda5839fb12c5b3dfa4179a6ab3edaea69c545cf7790c1ed79b74c37195"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/SchwarzschildQNM.\
nb"], "Hash" -> 
          "15d5fa74af016eea7e656bd48cd872dca967601b673f83e78c26b690d0a7df3a"|>\
}|>, 
      TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Vector[
        TypeSystem`Struct[{"File", "Hash"}, {
          TypeSystem`Atom[File], 
          TypeSystem`Atom[String]}], 6], 1], <||>], 
    "DocumentationBuildResults" -> {
      Success[
      "DocumentationBuild", <|
       "TotalTime" -> Quantity[2.263044, "Seconds"], "MaximumFileTime" -> {
          Quantity[2.189446, "Seconds"], 
          "/home/cookgb/Research/PublicPaclets/KerrModes/KerrQNM/\
Documentation/English/Guides/KerrQuasi-NormalModes.nb"}, 
        "ProcessedFiles" -> <|
         "/home/cookgb/Research/PublicPaclets/KerrModes/KerrQNM/Documentation/\
English/Guides/KerrQuasi-NormalModes.nb" -> 
          Success["BuildDocumentationNotebook", <|
            "Time" -> Quantity[2.189446, "Seconds"]|>]|>, "FailedFilesCount" -> 
        0, "PercentSucceeded" -> Quantity[100., "Percent"], 
        "ProcessedFilesCount" -> 1, "SuccessfulFilesCount" -> 1, 
        "SkippedFilesCount" -> 0, "MessageTemplate" -> 
        "Documentation build completed successfully."|>]}|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.882214598732943*^9, 3.882263325934462*^9, 
  3.882291659823648*^9, 3.88234982942601*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"5bfe1248-b77b-4cc4-89fd-b3b5b17f591a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"result", "[", "3", "]"}], "=", 
  RowBox[{"PacletBuild", "[", 
   RowBox[{"PacletDir", "<>", "\"\</KerrTTML\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.879501362564122*^9, 3.879501378042837*^9}, 
   3.879501564345615*^9, {3.879501688591901*^9, 3.879501736852374*^9}, {
   3.8795018248538218`*^9, 3.879501828090248*^9}, {3.879501926874854*^9, 
   3.879501987931033*^9}, 3.8807261082437983`*^9, 3.880727389814321*^9},
 CellLabel->"In[7]:=",ExpressionUUID->"8e2dfd8e-ace1-40b6-9a9b-180fa0ab1d81"],

Cell[BoxData[
 TemplateBox[{
  "DocumentationBuild`Info`GetNotebookHistoryData", "notfound", 
   "\"Could not find the history data for Excised\"", 2, 7, 14, 
   19309420012344080692, "Local", 
   "DocumentationBuild`Info`GetNotebookHistoryData"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.882291673788715*^9, 3.8823498335678997`*^9},
 CellLabel->
  "During evaluation of \
In[7]:=",ExpressionUUID->"703bb1ac-18d5-4424-8945-d5f8fa8f1b88"],

Cell[BoxData[
 TemplateBox[{
  "DocumentationBuild`Info`GetNotebookHistoryData", "notfound", 
   "\"Could not find the history data for Excised\"", 2, 7, 15, 
   19309420012344080692, "Local", 
   "DocumentationBuild`Info`GetNotebookHistoryData"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.882291673788715*^9, 3.882349833658421*^9},
 CellLabel->
  "During evaluation of \
In[7]:=",ExpressionUUID->"403cb8e1-d293-4504-b0ca-44e3a38bc48b"],

Cell[BoxData[
 TemplateBox[{
  "DocumentationBuild`Info`GetNotebookHistoryData", "notfound", 
   "\"Could not find the history data for Excised\"", 2, 7, 16, 
   19309420012344080692, "Local", 
   "DocumentationBuild`Info`GetNotebookHistoryData"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.882291673788715*^9, 3.8823498336665783`*^9},
 CellLabel->
  "During evaluation of \
In[7]:=",ExpressionUUID->"a9f68028-535b-4f96-a8e5-6d314e8321b3"],

Cell[BoxData[
 TemplateBox[{
  "DocumentationBuild`Info`GetNotebookHistoryData", "notfound", 
   "\"Could not find the history data for Excised\"", 2, 7, 17, 
   19309420012344080692, "Local", 
   "DocumentationBuild`Info`GetNotebookHistoryData"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.882291673788715*^9, 3.882349833674365*^9},
 CellLabel->
  "During evaluation of \
In[7]:=",ExpressionUUID->"152b5762-7653-4743-9163-754374055b58"],

Cell[BoxData[
 TemplateBox[{
  "DocumentationBuild`Info`GetNotebookHistoryData", "notfound", 
   "\"Could not find the history data for Excised\"", 2, 7, 18, 
   19309420012344080692, "Local", 
   "DocumentationBuild`Info`GetNotebookHistoryData"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.882291673788715*^9, 3.882349833681999*^9},
 CellLabel->
  "During evaluation of \
In[7]:=",ExpressionUUID->"0668c6c3-7786-4ed1-b486-e0ee8f3d736d"],

Cell[BoxData[
 TemplateBox[{
  "DocumentationBuild`Info`GetNotebookHistoryData", "notfound", 
   "\"Could not find the history data for Excised\"", 2, 7, 19, 
   19309420012344080692, "Local", 
   "DocumentationBuild`Info`GetNotebookHistoryData"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.882291673788715*^9, 3.882349833903945*^9},
 CellLabel->
  "During evaluation of \
In[7]:=",ExpressionUUID->"90dd2997-9256-4727-936d-461bced31510"],

Cell[BoxData[
 TemplateBox[{
  "DocumentationBuild`Info`GetNotebookHistoryData", "notfound", 
   "\"Could not find the history data for Excised\"", 2, 7, 20, 
   19309420012344080692, "Local", 
   "DocumentationBuild`Info`GetNotebookHistoryData"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.882291673788715*^9, 3.882349834727792*^9},
 CellLabel->
  "During evaluation of \
In[7]:=",ExpressionUUID->"7c7e32e0-9603-4b38-ac98-94ed0cff6e04"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["Success",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            FrameBox[
             StyleBox["\"\[Checkmark]\"", 
              Directive[
               RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
               25], StripOnInput -> False], ContentPadding -> False, 
             FrameStyle -> None, FrameMargins -> {{0, 0}, {0, 0}}, 
             StripOnInput -> False], 
            GridBox[{{
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"PacletArchive\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                 "\"/home/cookgb/Research/PublicPaclets/KerrModes/KerrTTML/\
build/KerrTTML-1.0.0.paclet\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "8.761251`", "\"s\"", "seconds", "\"Seconds\""}, 
                   "Quantity", SyntaxForm -> Mod], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            FrameBox[
             StyleBox["\"\[Checkmark]\"", 
              Directive[
               RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
               25], StripOnInput -> False], ContentPadding -> False, 
             FrameStyle -> None, FrameMargins -> {{0, 0}, {0, 0}}, 
             StripOnInput -> False], 
            GridBox[{{
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"PacletArchive\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                 "\"/home/cookgb/Research/PublicPaclets/KerrModes/KerrTTML/\
build/KerrTTML-1.0.0.paclet\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "8.761251`", "\"s\"", "seconds", "\"Seconds\""}, 
                   "Quantity", SyntaxForm -> Mod], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"PacletManifest\"", "\": \""}, "RowDefault"],
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   TagBox[
                    
                    DynamicModuleBox[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
                    "InitialData" -> <|
                    "Files" -> {<|
                    "File" -> File["Kernel/KerrTTML.wl"], "Hash" -> 
                    "1e15962466a13c0c6857215028bd4886b4691d6b0d775b70b45a67528\
6331229"|>, <|"File" -> 
                    File["Documentation/English/Guides/KerrTotal-\
TransmissionModesLeft.nb"], "Hash" -> 
                    "d08a0f9606afdb402352a2c55462ad890a4ad22ab52c4baa833945154\
b1096a0"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
KerrTTMLRefineSequence.nb"], "Hash" -> 
                    "9fa1e52d1b0c874e285a5b958d22d166ac9ba2b2d4b9301c06ad88b04\
f4b8c17"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
KerrTTMLSequence.nb"], "Hash" -> 
                    "0512e7d5b62cb0b33ffe83e1585e527ff13d98c53b658a7df7168c695\
9af222f"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
PlotSchTTML.nb"], "Hash" -> 
                    "d47aaf087f774d7fe59dbe0fda89fa605f526f1e1e491f22dc240a785\
aa17df1"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
SchwarzschildTTML.nb"], "Hash" -> 
                    "18aca3a88e20149818678291e217213ab6a2661e642b6a832ea79eb18\
a496b97"|>}|>, "AllowEmbedding" -> True, "InitialShape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, All, 
                    TypeSystem`PackageScope`KeyDummy[3]} -> 
                    1, {All, All, "File"} -> 1, {All, All, "Hash"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[56.00000000000001], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|
                    "File" -> TypeSystem`PackageScope`AtomShape[60], "Hash" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 2, {All, All}]], 6, 
                    DirectedInfinity[1], {All}]]], 1, 
                    DirectedInfinity[1], {}]], "InitialType" -> 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Struct[{"File", "Hash"}, {
                    TypeSystem`Atom[File], 
                    TypeSystem`Atom[String]}], 6], 1], "Meta" -> <||>, 
                    "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, All, 
                    TypeSystem`PackageScope`KeyDummy[3]} -> 
                    1, {All, All, "File"} -> 1, {All, All, "Hash"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[56.00000000000001], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|
                    "File" -> TypeSystem`PackageScope`AtomShape[60], "Hash" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 2, {All, All}]], 6, 
                    DirectedInfinity[1], {All}]]], 1, 
                    DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Struct[{"File", "Hash"}, {
                    TypeSystem`Atom[File], 
                    TypeSystem`Atom[String]}], 6], 1], "Path" -> {}, 
                    "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 2, 
                    "DataRowCount" -> 1, "DataColumnCount" -> 2, 
                    "SortPaths" -> {}, "SortDirections" -> {}, 
                    "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                    DynamicModule[{
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                    Style[
                    Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    Mouseover[
                    
                    Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]], 
                    Graphics[{
                    GrayLevel[0.6], 
                    
                    Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, Keys}, "KeyDummy", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["File", 
                    Style[
                    "File", FontColor -> RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "File"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "File"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Hash", 
                    Style[
                    "Hash", FontColor -> RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "Hash"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "Hash"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Files", 
                    Style[
                    "Files", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Files"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/KerrTTML.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 1, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "1e15962466a13c0c6857215028bd4886b4691d6b0d775b70b45a67528\
6331229", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 1, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/Guides/KerrTotal-\
TransmissionModesLeft.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 2, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "d08a0f9606afdb402352a2c55462ad890a4ad22ab52c4baa833945154\
b1096a0", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 2, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
KerrTTMLRefineSequence.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 3, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "9fa1e52d1b0c874e285a5b958d22d166ac9ba2b2d4b9301c06ad88b04\
f4b8c17", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 3, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
KerrTTMLSequence.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 4, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "0512e7d5b62cb0b33ffe83e1585e527ff13d98c53b658a7df7168c695\
9af222f", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 4, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/PlotSchTTML.\
nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 5, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "d47aaf087f774d7fe59dbe0fda89fa605f526f1e1e491f22dc240a785\
aa17df1", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 5, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
SchwarzschildTTML.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 6, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "18aca3a88e20149818678291e217213ab6a2661e642b6a832ea79eb18\
a496b97", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 6, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}}, 
                    BaseStyle -> {
                    ContextMenu -> 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                    "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                    Dividers -> All, FrameStyle -> 
                    GrayLevel[0.7490196078431373], Spacings -> {0, 0}, 
                    Alignment -> Left, 
                    BaseStyle -> {
                    FontFamily -> "Source Sans Pro", FontSize -> 14, 
                    FontWeight -> Plain}], LineBreakWithin -> False, 
                    ContextMenu -> {}, NumberMarks -> False, ShowAutoStyles -> 
                    False]], TypeSystem`NestedGrid`PackagePrivate`initialQ = 
                    True}, 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`datasetData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
                    DynamicModuleValues :> {}], 
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`SubViewPathbar[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = 
                    Style[
                    Framed[
                    Dynamic[
                    Replace[
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                    Blank[]] -> "", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                    Blank[]], 
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                    Blank[]], 
                    Pattern[
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Blank[]]] :> (
                    Increment[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                    TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader = TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path$, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                    Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
                    FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
                    Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 
                    1], TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$\
}, 
                    DynamicWrapperBox[
                    DynamicBox[
                    ToBoxes[
                    Dataset`DatasetContent[
                    2, "Path" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
                    "Grid" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    "VPos" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
                    "TopBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
                    "BottomBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
                    "OutputID" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
                    StandardForm], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                    MouseAnnotation[]], 
                    Initialization :> (
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
                    CreateUUID[]), DynamicModuleValues :> {}, 
                    BaseStyle -> {LineBreakWithin -> False}, 
                    UnsavedVariables :> {
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}], 
                    Deploy, DefaultBaseStyle -> "Deploy"], 
                   Dataset`InterpretDataset[1], Selectable -> False, Editable -> 
                   False, SelectWithContents -> True], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  
                  TemplateBox[{"\"DocumentationBuildResults\"", "\": \""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    InterpretationBox[
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Documentation build completed successfully.\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.209534`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Documentation build completed successfully.\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"2.209534`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"MaximumFileTime\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    
                    TemplateBox[{"1.257397`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], ",", 
                    "\"/home/cookgb/Research/PublicPaclets/KerrModes/KerrTTML/\
Documentation/English/ReferencePages/Symbols/SchwarzschildTTML.nb\""}], "}"}],
                     "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"ProcessedFiles\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    
                    RowBox[{
                    "\"/home/cookgb/Research/PublicPaclets/KerrModes/KerrTTML/\
Documentation/English/Guides/KerrTotal-TransmissionModesLeft.nb\"", "\[Rule]", 
                    InterpretationBox[
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.820949`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.820949`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    Success[
                    "BuildDocumentationNotebook", <|
                    "Time" -> Quantity[0.820949, "Seconds"]|>], Selectable -> 
                    False, Editable -> False, SelectWithContents -> True]}], 
                    ",", 
                    
                    RowBox[{
                    "\"/home/cookgb/Research/PublicPaclets/KerrModes/KerrTTML/\
Documentation/English/ReferencePages/Symbols/SchwarzschildTTML.nb\"", 
                    "\[Rule]", 
                    InterpretationBox[
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.257397`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.257397`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    Success[
                    "BuildDocumentationNotebook", <|
                    "Time" -> Quantity[1.257397, "Seconds"]|>], Selectable -> 
                    False, Editable -> False, SelectWithContents -> True]}]}],
                     "\[RightAssociation]"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"FailedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PercentSucceeded\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"100.`", "\"%\"", "percent", "\"Percent\""}, 
                    "QuantityPostfix", SyntaxForm -> Mod], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"ProcessedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"SuccessfulFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"SkippedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"DocumentationBuild\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    Success[
                    "DocumentationBuild", <|
                    "TotalTime" -> Quantity[2.209534, "Seconds"], 
                    "MaximumFileTime" -> {
                    Quantity[1.257397, "Seconds"], 
                    "/home/cookgb/Research/PublicPaclets/KerrModes/KerrTTML/\
Documentation/English/ReferencePages/Symbols/SchwarzschildTTML.nb"}, 
                    "ProcessedFiles" -> <|
                    "/home/cookgb/Research/PublicPaclets/KerrModes/KerrTTML/\
Documentation/English/Guides/KerrTotal-TransmissionModesLeft.nb" -> 
                    Success[
                    "BuildDocumentationNotebook", <|
                    "Time" -> Quantity[0.820949, "Seconds"]|>], 
                    "/home/cookgb/Research/PublicPaclets/KerrModes/KerrTTML/\
Documentation/English/ReferencePages/Symbols/SchwarzschildTTML.nb" -> 
                    Success[
                    "BuildDocumentationNotebook", <|
                    "Time" -> Quantity[1.257397, "Seconds"]|>]|>, 
                    "FailedFilesCount" -> 0, "PercentSucceeded" -> 
                    Quantity[100., "Percent"], "ProcessedFilesCount" -> 2, 
                    "SuccessfulFilesCount" -> 2, "SkippedFilesCount" -> 0, 
                    "MessageTemplate" -> 
                    "Documentation build completed successfully."|>], 
                    Selectable -> False, Editable -> False, 
                    SelectWithContents -> True], "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\"PacletBuild\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Success[
  "PacletBuild", <|
   "PacletArchive" -> 
    "/home/cookgb/Research/PublicPaclets/KerrModes/KerrTTML/build/KerrTTML-1.\
0.0.paclet", "TotalTime" -> Quantity[8.761251, "Seconds"], "PacletManifest" -> 
    Dataset[<|"Files" -> {<|
         "File" -> File["Kernel/KerrTTML.wl"], "Hash" -> 
          "1e15962466a13c0c6857215028bd4886b4691d6b0d775b70b45a675286331229"|>\
, <|"File" -> 
          File["Documentation/English/Guides/KerrTotal-TransmissionModesLeft.\
nb"], "Hash" -> 
          "d08a0f9606afdb402352a2c55462ad890a4ad22ab52c4baa833945154b1096a0"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/\
KerrTTMLRefineSequence.nb"], "Hash" -> 
          "9fa1e52d1b0c874e285a5b958d22d166ac9ba2b2d4b9301c06ad88b04f4b8c17"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/KerrTTMLSequence.\
nb"], "Hash" -> 
          "0512e7d5b62cb0b33ffe83e1585e527ff13d98c53b658a7df7168c6959af222f"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/PlotSchTTML.nb"],
           "Hash" -> 
          "d47aaf087f774d7fe59dbe0fda89fa605f526f1e1e491f22dc240a785aa17df1"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/\
SchwarzschildTTML.nb"], "Hash" -> 
          "18aca3a88e20149818678291e217213ab6a2661e642b6a832ea79eb18a496b97"|>\
}|>, 
      TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Vector[
        TypeSystem`Struct[{"File", "Hash"}, {
          TypeSystem`Atom[File], 
          TypeSystem`Atom[String]}], 6], 1], <||>], 
    "DocumentationBuildResults" -> {
      Success[
      "DocumentationBuild", <|
       "TotalTime" -> Quantity[2.209534, "Seconds"], "MaximumFileTime" -> {
          Quantity[1.257397, "Seconds"], 
          "/home/cookgb/Research/PublicPaclets/KerrModes/KerrTTML/\
Documentation/English/ReferencePages/Symbols/SchwarzschildTTML.nb"}, 
        "ProcessedFiles" -> <|
         "/home/cookgb/Research/PublicPaclets/KerrModes/KerrTTML/\
Documentation/English/Guides/KerrTotal-TransmissionModesLeft.nb" -> 
          Success["BuildDocumentationNotebook", <|
            "Time" -> Quantity[0.820949, "Seconds"]|>], 
          "/home/cookgb/Research/PublicPaclets/KerrModes/KerrTTML/\
Documentation/English/ReferencePages/Symbols/SchwarzschildTTML.nb" -> 
          Success["BuildDocumentationNotebook", <|
            "Time" -> Quantity[1.257397, "Seconds"]|>]|>, "FailedFilesCount" -> 
        0, "PercentSucceeded" -> Quantity[100., "Percent"], 
        "ProcessedFilesCount" -> 2, "SuccessfulFilesCount" -> 2, 
        "SkippedFilesCount" -> 0, "MessageTemplate" -> 
        "Documentation build completed successfully."|>]}|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8822916831084127`*^9, 3.882349840752419*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"85270f46-eaff-48a2-870d-13a86799714f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"result", "[", "4", "]"}], "=", 
  RowBox[{"PacletBuild", "[", 
   RowBox[{"PacletDir", "<>", "\"\</KerrTTMR\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.879501362564122*^9, 3.879501378042837*^9}, 
   3.879501564345615*^9, {3.879501688591901*^9, 3.879501736852374*^9}, {
   3.8795018248538218`*^9, 3.879501828090248*^9}, {3.879501926874854*^9, 
   3.879501997449383*^9}, 3.880726112820654*^9, 3.880727394624572*^9},
 CellLabel->"In[8]:=",ExpressionUUID->"cda96cc3-5014-4936-8781-d28ddd0ca7a3"],

Cell[BoxData[
 TemplateBox[{
  "DocumentationBuild`Info`GetNotebookHistoryData", "notfound", 
   "\"Could not find the history data for Excised\"", 2, 8, 21, 
   19309420012344080692, "Local", 
   "DocumentationBuild`Info`GetNotebookHistoryData"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.882349843665782*^9},
 CellLabel->
  "During evaluation of \
In[8]:=",ExpressionUUID->"65deea8a-d474-4e24-b5ce-eef7a664ecf9"],

Cell[BoxData[
 TemplateBox[{
  "DocumentationBuild`Info`GetNotebookHistoryData", "notfound", 
   "\"Could not find the history data for Excised\"", 2, 8, 22, 
   19309420012344080692, "Local", 
   "DocumentationBuild`Info`GetNotebookHistoryData"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.882349843711584*^9},
 CellLabel->
  "During evaluation of \
In[8]:=",ExpressionUUID->"3ea67e64-33ca-45ae-991b-5c9dbb7137a6"],

Cell[BoxData[
 TemplateBox[{
  "DocumentationBuild`Info`GetNotebookHistoryData", "notfound", 
   "\"Could not find the history data for Excised\"", 2, 8, 23, 
   19309420012344080692, "Local", 
   "DocumentationBuild`Info`GetNotebookHistoryData"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.882349843724893*^9},
 CellLabel->
  "During evaluation of \
In[8]:=",ExpressionUUID->"5e9aec7f-2275-461b-aec1-df1bcdb6d982"],

Cell[BoxData[
 TemplateBox[{
  "DocumentationBuild`Info`GetNotebookHistoryData", "notfound", 
   "\"Could not find the history data for Excised\"", 2, 8, 24, 
   19309420012344080692, "Local", 
   "DocumentationBuild`Info`GetNotebookHistoryData"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.8823498437330236`*^9},
 CellLabel->
  "During evaluation of \
In[8]:=",ExpressionUUID->"5cad8d3f-76f3-42d5-8023-66ceaa4f08ca"],

Cell[BoxData[
 TemplateBox[{
  "DocumentationBuild`Info`GetNotebookHistoryData", "notfound", 
   "\"Could not find the history data for Excised\"", 2, 8, 25, 
   19309420012344080692, "Local", 
   "DocumentationBuild`Info`GetNotebookHistoryData"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.8823498437540407`*^9},
 CellLabel->
  "During evaluation of \
In[8]:=",ExpressionUUID->"4c9f1ec3-a2a8-4a00-a4f8-f55fa9e1fd44"],

Cell[BoxData[
 TemplateBox[{
  "DocumentationBuild`Info`GetNotebookHistoryData", "notfound", 
   "\"Could not find the history data for Excised\"", 2, 8, 26, 
   19309420012344080692, "Local", 
   "DocumentationBuild`Info`GetNotebookHistoryData"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.882349844012073*^9},
 CellLabel->
  "During evaluation of \
In[8]:=",ExpressionUUID->"4aceac26-e2ce-4a67-a62d-c61b0b15e326"],

Cell[BoxData[
 TemplateBox[{
  "DocumentationBuild`Info`GetNotebookHistoryData", "notfound", 
   "\"Could not find the history data for Excised\"", 2, 8, 27, 
   19309420012344080692, "Local", 
   "DocumentationBuild`Info`GetNotebookHistoryData"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.882349844807795*^9},
 CellLabel->
  "During evaluation of \
In[8]:=",ExpressionUUID->"d5b269e4-c32e-4c4c-a387-06b22a26b687"],

Cell[BoxData[
 TemplateBox[{
  "DocumentationBuild`Info`GetNotebookHistoryData", "notfound", 
   "\"Could not find the history data for Excised\"", 2, 8, 28, 
   19309420012344080692, "Local", 
   "DocumentationBuild`Info`GetNotebookHistoryData"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.88234984603141*^9},
 CellLabel->
  "During evaluation of \
In[8]:=",ExpressionUUID->"5db56705-0e75-4775-8c76-59f4ec3540af"],

Cell[BoxData[
 TemplateBox[{
  "DocumentationBuild`Info`GetNotebookHistoryData", "notfound", 
   "\"Could not find the history data for Excised\"", 2, 8, 29, 
   19309420012344080692, "Local", 
   "DocumentationBuild`Info`GetNotebookHistoryData"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.882349846934815*^9},
 CellLabel->
  "During evaluation of \
In[8]:=",ExpressionUUID->"7fd43abe-f314-46f0-ab79-7f1d6cc905a9"],

Cell[BoxData[
 TemplateBox[{
  "DocumentationBuild`Info`GetNotebookHistoryData", "notfound", 
   "\"Could not find the history data for Excised\"", 2, 8, 30, 
   19309420012344080692, "Local", 
   "DocumentationBuild`Info`GetNotebookHistoryData"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.882349847596815*^9},
 CellLabel->
  "During evaluation of \
In[8]:=",ExpressionUUID->"9bbac42c-ec83-4697-95a7-876f34f406ca"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["Success",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            FrameBox[
             StyleBox["\"\[Checkmark]\"", 
              Directive[
               RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
               25], StripOnInput -> False], ContentPadding -> False, 
             FrameStyle -> None, FrameMargins -> {{0, 0}, {0, 0}}, 
             StripOnInput -> False], 
            GridBox[{{
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"PacletArchive\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                 "\"/home/cookgb/Research/PublicPaclets/KerrModes/KerrTTMR/\
build/KerrTTMR-1.0.0.paclet\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "10.914562`", "\"s\"", "seconds", "\"Seconds\""}, 
                   "Quantity", SyntaxForm -> Mod], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            FrameBox[
             StyleBox["\"\[Checkmark]\"", 
              Directive[
               RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
               25], StripOnInput -> False], ContentPadding -> False, 
             FrameStyle -> None, FrameMargins -> {{0, 0}, {0, 0}}, 
             StripOnInput -> False], 
            GridBox[{{
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"PacletArchive\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                 "\"/home/cookgb/Research/PublicPaclets/KerrModes/KerrTTMR/\
build/KerrTTMR-1.0.0.paclet\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "10.914562`", "\"s\"", "seconds", "\"Seconds\""}, 
                   "Quantity", SyntaxForm -> Mod], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"PacletManifest\"", "\": \""}, "RowDefault"],
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   TagBox[
                    
                    DynamicModuleBox[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
                    "InitialData" -> <|
                    "Files" -> {<|
                    "File" -> File["Kernel/KerrTTMR.wl"], "Hash" -> 
                    "7293871a3fc4605e95f5e690d2193662529ffcd60475dd571d590b1a3\
2a4e4c1"|>, <|"File" -> 
                    File["Documentation/English/Guides/KerrTotal-\
TransmissionModesRight.nb"], "Hash" -> 
                    "12357e932607ae7daff0c4d40dacd93d6b8030a44ca7bb1e0e7b9eb31\
1c080ef"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
KerrTTMRRefineSequence.nb"], "Hash" -> 
                    "2e11965664b19a78caa03fd3b0a976ef47eb0c3105c0454d5aa6e658e\
78cce2b"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
KerrTTMRSequence.nb"], "Hash" -> 
                    "66de1d9faf22ceea8608aa4ca5ff78e231aedbe83d7cb89b99b406d7f\
daddef7"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
PlotSchTTMR.nb"], "Hash" -> 
                    "34cdaf55599c802245f7d6aa76f51731dbe724732ff0dc3b202bec3f4\
e220848"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
SchwarzschildTTMR.nb"], "Hash" -> 
                    "dce2397b902cc356159703b3321d44b435df9b004b5c856bfe1c9785a\
80aa8e2"|>}|>, "AllowEmbedding" -> True, "InitialShape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, All, 
                    TypeSystem`PackageScope`KeyDummy[4]} -> 
                    1, {All, All, "File"} -> 1, {All, All, "Hash"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[56.00000000000001], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|
                    "File" -> TypeSystem`PackageScope`AtomShape[60], "Hash" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 2, {All, All}]], 6, 
                    DirectedInfinity[1], {All}]]], 1, 
                    DirectedInfinity[1], {}]], "InitialType" -> 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Struct[{"File", "Hash"}, {
                    TypeSystem`Atom[File], 
                    TypeSystem`Atom[String]}], 6], 1], "Meta" -> <||>, 
                    "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, All, 
                    TypeSystem`PackageScope`KeyDummy[4]} -> 
                    1, {All, All, "File"} -> 1, {All, All, "Hash"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[56.00000000000001], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|
                    "File" -> TypeSystem`PackageScope`AtomShape[60], "Hash" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 2, {All, All}]], 6, 
                    DirectedInfinity[1], {All}]]], 1, 
                    DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Struct[{"File", "Hash"}, {
                    TypeSystem`Atom[File], 
                    TypeSystem`Atom[String]}], 6], 1], "Path" -> {}, 
                    "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 2, 
                    "DataRowCount" -> 1, "DataColumnCount" -> 2, 
                    "SortPaths" -> {}, "SortDirections" -> {}, 
                    "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                    DynamicModule[{
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                    Style[
                    Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    Mouseover[
                    
                    Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]], 
                    Graphics[{
                    GrayLevel[0.6], 
                    
                    Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, Keys}, "KeyDummy", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["File", 
                    Style[
                    "File", FontColor -> RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "File"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "File"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Hash", 
                    Style[
                    "Hash", FontColor -> RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "Hash"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "Hash"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Files", 
                    Style[
                    "Files", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Files"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/KerrTTMR.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 1, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "7293871a3fc4605e95f5e690d2193662529ffcd60475dd571d590b1a3\
2a4e4c1", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 1, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/Guides/KerrTotal-\
TransmissionModesRight.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 2, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "12357e932607ae7daff0c4d40dacd93d6b8030a44ca7bb1e0e7b9eb31\
1c080ef", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 2, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
KerrTTMRRefineSequence.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 3, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "2e11965664b19a78caa03fd3b0a976ef47eb0c3105c0454d5aa6e658e\
78cce2b", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 3, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
KerrTTMRSequence.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 4, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "66de1d9faf22ceea8608aa4ca5ff78e231aedbe83d7cb89b99b406d7f\
daddef7", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 4, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/PlotSchTTMR.\
nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 5, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "34cdaf55599c802245f7d6aa76f51731dbe724732ff0dc3b202bec3f4\
e220848", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 5, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
SchwarzschildTTMR.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 6, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "dce2397b902cc356159703b3321d44b435df9b004b5c856bfe1c9785a\
80aa8e2", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 6, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}}, 
                    BaseStyle -> {
                    ContextMenu -> 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                    "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                    Dividers -> All, FrameStyle -> 
                    GrayLevel[0.7490196078431373], Spacings -> {0, 0}, 
                    Alignment -> Left, 
                    BaseStyle -> {
                    FontFamily -> "Source Sans Pro", FontSize -> 14, 
                    FontWeight -> Plain}], LineBreakWithin -> False, 
                    ContextMenu -> {}, NumberMarks -> False, ShowAutoStyles -> 
                    False]], TypeSystem`NestedGrid`PackagePrivate`initialQ = 
                    True}, 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`datasetData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
                    DynamicModuleValues :> {}], 
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`SubViewPathbar[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = 
                    Style[
                    Framed[
                    Dynamic[
                    Replace[
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                    Blank[]] -> "", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                    Blank[]], 
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                    Blank[]], 
                    Pattern[
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Blank[]]] :> (
                    Increment[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                    TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader = TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path$, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                    Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
                    FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
                    Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 
                    1], TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$\
}, 
                    DynamicWrapperBox[
                    DynamicBox[
                    ToBoxes[
                    Dataset`DatasetContent[
                    2, "Path" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
                    "Grid" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    "VPos" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
                    "TopBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
                    "BottomBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
                    "OutputID" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
                    StandardForm], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                    MouseAnnotation[]], 
                    Initialization :> (
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
                    CreateUUID[]), DynamicModuleValues :> {}, 
                    BaseStyle -> {LineBreakWithin -> False}, 
                    UnsavedVariables :> {
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}], 
                    Deploy, DefaultBaseStyle -> "Deploy"], 
                   Dataset`InterpretDataset[1], Selectable -> False, Editable -> 
                   False, SelectWithContents -> True], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  
                  TemplateBox[{"\"DocumentationBuildResults\"", "\": \""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    InterpretationBox[
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Documentation build completed successfully.\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"4.318885`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Documentation build completed successfully.\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"4.318885`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"MaximumFileTime\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    
                    TemplateBox[{"1.128794`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], ",", 
                    "\"/home/cookgb/Research/PublicPaclets/KerrModes/KerrTTMR/\
Documentation/English/ReferencePages/Symbols/KerrTTMRRefineSequence.nb\""}], 
                    "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"ProcessedFiles\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    
                    RowBox[{
                    "\"/home/cookgb/Research/PublicPaclets/KerrModes/KerrTTMR/\
Documentation/English/Guides/KerrTotal-TransmissionModesRight.nb\"", 
                    "\[Rule]", 
                    InterpretationBox[
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.784345`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.784345`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    Success[
                    "BuildDocumentationNotebook", <|
                    "Time" -> Quantity[0.784345, "Seconds"]|>], Selectable -> 
                    False, Editable -> False, SelectWithContents -> True]}], 
                    ",", 
                    
                    RowBox[{
                    "\"/home/cookgb/Research/PublicPaclets/KerrModes/KerrTTMR/\
Documentation/English/ReferencePages/Symbols/KerrTTMRRefineSequence.nb\"", 
                    "\[Rule]", 
                    InterpretationBox[
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.128794`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"1.128794`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    Success[
                    "BuildDocumentationNotebook", <|
                    "Time" -> Quantity[1.128794, "Seconds"]|>], Selectable -> 
                    False, Editable -> False, SelectWithContents -> True]}], 
                    ",", 
                    
                    RowBox[{
                    "\"/home/cookgb/Research/PublicPaclets/KerrModes/KerrTTMR/\
Documentation/English/ReferencePages/Symbols/KerrTTMRSequence.nb\"", 
                    "\[Rule]", 
                    InterpretationBox[
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.883754`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.883754`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"BuildDocumentationNotebook\"", 
                    "SummaryItem"]}]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    Success[
                    "BuildDocumentationNotebook", <|
                    "Time" -> Quantity[0.883754, "Seconds"]|>], Selectable -> 
                    False, Editable -> False, SelectWithContents -> True]}], 
                    ",", 
                    
                    RowBox[{
                    "\"/home/cookgb/Research/PublicPaclets/KerrModes/KerrTTMR/\
Documentation/English/ReferencePages/Symbols/PlotSchTTMR.nb\"", "\[Rule]", 
                    InterpretationBox[
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.637354`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.637354`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    Success[
                    "BuildDocumentationNotebook", <|
                    "Time" -> Quantity[0.637354, "Seconds"]|>], Selectable -> 
                    False, Editable -> False, SelectWithContents -> True]}], 
                    ",", 
                    
                    RowBox[{
                    "\"/home/cookgb/Research/PublicPaclets/KerrModes/KerrTTMR/\
Documentation/English/ReferencePages/Symbols/SchwarzschildTTMR.nb\"", 
                    "\[Rule]", 
                    InterpretationBox[
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.625683`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.625683`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    Success[
                    "BuildDocumentationNotebook", <|
                    "Time" -> Quantity[0.625683, "Seconds"]|>], Selectable -> 
                    False, Editable -> False, SelectWithContents -> True]}]}],
                     "\[RightAssociation]"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"FailedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PercentSucceeded\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"100.`", "\"%\"", "percent", "\"Percent\""}, 
                    "QuantityPostfix", SyntaxForm -> Mod], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"ProcessedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["5", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"SuccessfulFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["5", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"SkippedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"DocumentationBuild\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    Success[
                    "DocumentationBuild", <|
                    "TotalTime" -> Quantity[4.318885, "Seconds"], 
                    "MaximumFileTime" -> {
                    Quantity[1.128794, "Seconds"], 
                    "/home/cookgb/Research/PublicPaclets/KerrModes/KerrTTMR/\
Documentation/English/ReferencePages/Symbols/KerrTTMRRefineSequence.nb"}, 
                    "ProcessedFiles" -> <|
                    "/home/cookgb/Research/PublicPaclets/KerrModes/KerrTTMR/\
Documentation/English/Guides/KerrTotal-TransmissionModesRight.nb" -> 
                    Success[
                    "BuildDocumentationNotebook", <|
                    "Time" -> Quantity[0.784345, "Seconds"]|>], 
                    "/home/cookgb/Research/PublicPaclets/KerrModes/KerrTTMR/\
Documentation/English/ReferencePages/Symbols/KerrTTMRRefineSequence.nb" -> 
                    Success[
                    "BuildDocumentationNotebook", <|
                    "Time" -> Quantity[1.128794, "Seconds"]|>], 
                    "/home/cookgb/Research/PublicPaclets/KerrModes/KerrTTMR/\
Documentation/English/ReferencePages/Symbols/KerrTTMRSequence.nb" -> 
                    Success[
                    "BuildDocumentationNotebook", <|
                    "Time" -> Quantity[0.883754, "Seconds"]|>], 
                    "/home/cookgb/Research/PublicPaclets/KerrModes/KerrTTMR/\
Documentation/English/ReferencePages/Symbols/PlotSchTTMR.nb" -> 
                    Success[
                    "BuildDocumentationNotebook", <|
                    "Time" -> Quantity[0.637354, "Seconds"]|>], 
                    "/home/cookgb/Research/PublicPaclets/KerrModes/KerrTTMR/\
Documentation/English/ReferencePages/Symbols/SchwarzschildTTMR.nb" -> 
                    Success[
                    "BuildDocumentationNotebook", <|
                    "Time" -> Quantity[0.625683, "Seconds"]|>]|>, 
                    "FailedFilesCount" -> 0, "PercentSucceeded" -> 
                    Quantity[100., "Percent"], "ProcessedFilesCount" -> 5, 
                    "SuccessfulFilesCount" -> 5, "SkippedFilesCount" -> 0, 
                    "MessageTemplate" -> 
                    "Documentation build completed successfully."|>], 
                    Selectable -> False, Editable -> False, 
                    SelectWithContents -> True], "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\"PacletBuild\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Success[
  "PacletBuild", <|
   "PacletArchive" -> 
    "/home/cookgb/Research/PublicPaclets/KerrModes/KerrTTMR/build/KerrTTMR-1.\
0.0.paclet", "TotalTime" -> Quantity[10.914562, "Seconds"], "PacletManifest" -> 
    Dataset[<|"Files" -> {<|
         "File" -> File["Kernel/KerrTTMR.wl"], "Hash" -> 
          "7293871a3fc4605e95f5e690d2193662529ffcd60475dd571d590b1a32a4e4c1"|>\
, <|"File" -> 
          File["Documentation/English/Guides/KerrTotal-TransmissionModesRight.\
nb"], "Hash" -> 
          "12357e932607ae7daff0c4d40dacd93d6b8030a44ca7bb1e0e7b9eb311c080ef"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/\
KerrTTMRRefineSequence.nb"], "Hash" -> 
          "2e11965664b19a78caa03fd3b0a976ef47eb0c3105c0454d5aa6e658e78cce2b"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/KerrTTMRSequence.\
nb"], "Hash" -> 
          "66de1d9faf22ceea8608aa4ca5ff78e231aedbe83d7cb89b99b406d7fdaddef7"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/PlotSchTTMR.nb"],
           "Hash" -> 
          "34cdaf55599c802245f7d6aa76f51731dbe724732ff0dc3b202bec3f4e220848"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/\
SchwarzschildTTMR.nb"], "Hash" -> 
          "dce2397b902cc356159703b3321d44b435df9b004b5c856bfe1c9785a80aa8e2"|>\
}|>, 
      TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Vector[
        TypeSystem`Struct[{"File", "Hash"}, {
          TypeSystem`Atom[File], 
          TypeSystem`Atom[String]}], 6], 1], <||>], 
    "DocumentationBuildResults" -> {
      Success[
      "DocumentationBuild", <|
       "TotalTime" -> Quantity[4.318885, "Seconds"], "MaximumFileTime" -> {
          Quantity[1.128794, "Seconds"], 
          "/home/cookgb/Research/PublicPaclets/KerrModes/KerrTTMR/\
Documentation/English/ReferencePages/Symbols/KerrTTMRRefineSequence.nb"}, 
        "ProcessedFiles" -> <|
         "/home/cookgb/Research/PublicPaclets/KerrModes/KerrTTMR/\
Documentation/English/Guides/KerrTotal-TransmissionModesRight.nb" -> 
          Success["BuildDocumentationNotebook", <|
            "Time" -> Quantity[0.784345, "Seconds"]|>], 
          "/home/cookgb/Research/PublicPaclets/KerrModes/KerrTTMR/\
Documentation/English/ReferencePages/Symbols/KerrTTMRRefineSequence.nb" -> 
          Success[
           "BuildDocumentationNotebook", <|
            "Time" -> Quantity[1.128794, "Seconds"]|>], 
          "/home/cookgb/Research/PublicPaclets/KerrModes/KerrTTMR/\
Documentation/English/ReferencePages/Symbols/KerrTTMRSequence.nb" -> 
          Success["BuildDocumentationNotebook", <|
            "Time" -> Quantity[0.883754, "Seconds"]|>], 
          "/home/cookgb/Research/PublicPaclets/KerrModes/KerrTTMR/\
Documentation/English/ReferencePages/Symbols/PlotSchTTMR.nb" -> 
          Success["BuildDocumentationNotebook", <|
            "Time" -> Quantity[0.637354, "Seconds"]|>], 
          "/home/cookgb/Research/PublicPaclets/KerrModes/KerrTTMR/\
Documentation/English/ReferencePages/Symbols/SchwarzschildTTMR.nb" -> 
          Success["BuildDocumentationNotebook", <|
            "Time" -> Quantity[0.625683, "Seconds"]|>]|>, "FailedFilesCount" -> 
        0, "PercentSucceeded" -> Quantity[100., "Percent"], 
        "ProcessedFilesCount" -> 5, "SuccessfulFilesCount" -> 5, 
        "SkippedFilesCount" -> 0, "MessageTemplate" -> 
        "Documentation build completed successfully."|>]}|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.882349853054631*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"7f63b019-bb01-4b42-98d4-6b4be6a0a790"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"result", "[", "5", "]"}], "=", 
  RowBox[{"PacletBuild", "[", 
   RowBox[{"PacletDir", "<>", "\"\</SWSpheroidal\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.879501362564122*^9, 3.879501378042837*^9}, 
   3.879501564345615*^9, {3.879501688591901*^9, 3.879501736852374*^9}, {
   3.8795018248538218`*^9, 3.879501828090248*^9}, {3.879501926874854*^9, 
   3.879501964845593*^9}, 3.880726116895274*^9, 3.880727401960683*^9},
 CellLabel->"In[9]:=",ExpressionUUID->"014b5f99-4b99-400d-a97d-a802f45c9111"],

Cell[BoxData[
 TemplateBox[{
  "DocumentationBuild`Info`GetNotebookHistoryData", "notfound", 
   "\"Could not find the history data for Excised\"", 2, 9, 31, 
   19309420012344080692, "Local", 
   "DocumentationBuild`Info`GetNotebookHistoryData"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.8821085380956573`*^9, 3.8821283087412367`*^9, 
  3.882214582203443*^9, 3.882263328670849*^9, 3.8822916646628847`*^9, 
  3.8823498578390293`*^9},
 CellLabel->
  "During evaluation of \
In[9]:=",ExpressionUUID->"031e21c9-76b4-4149-bab8-415922e63dcd"],

Cell[BoxData[
 TemplateBox[{
  "DocumentationBuild`Info`GetNotebookHistoryData", "notfound", 
   "\"Could not find the history data for Excised\"", 2, 9, 32, 
   19309420012344080692, "Local", 
   "DocumentationBuild`Info`GetNotebookHistoryData"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.8821085380956573`*^9, 3.8821283087412367`*^9, 
  3.882214582203443*^9, 3.882263328670849*^9, 3.8822916646628847`*^9, 
  3.8823498578504744`*^9},
 CellLabel->
  "During evaluation of \
In[9]:=",ExpressionUUID->"2d98865b-6946-4cb1-81d1-340d3090f5e9"],

Cell[BoxData[
 TemplateBox[{
  "DocumentationBuild`Info`GetNotebookHistoryData", "notfound", 
   "\"Could not find the history data for Excised\"", 2, 9, 33, 
   19309420012344080692, "Local", 
   "DocumentationBuild`Info`GetNotebookHistoryData"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.8821085380956573`*^9, 3.8821283087412367`*^9, 
  3.882214582203443*^9, 3.882263328670849*^9, 3.8822916646628847`*^9, 
  3.882349857901457*^9},
 CellLabel->
  "During evaluation of \
In[9]:=",ExpressionUUID->"3f5aaaf5-3b79-449c-9b61-b6555cbdadc2"],

Cell[BoxData[
 TemplateBox[{
  "DocumentationBuild`Info`GetNotebookHistoryData", "notfound", 
   "\"Could not find the history data for Excised\"", 2, 9, 34, 
   19309420012344080692, "Local", 
   "DocumentationBuild`Info`GetNotebookHistoryData"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.8821085380956573`*^9, 3.8821283087412367`*^9, 
  3.882214582203443*^9, 3.882263328670849*^9, 3.8822916646628847`*^9, 
  3.882349857925289*^9},
 CellLabel->
  "During evaluation of \
In[9]:=",ExpressionUUID->"0021cdae-0425-4aba-b75e-5ca23dcd2c89"],

Cell[BoxData[
 TemplateBox[{
  "DocumentationBuild`Info`GetNotebookHistoryData", "notfound", 
   "\"Could not find the history data for Excised\"", 2, 9, 35, 
   19309420012344080692, "Local", 
   "DocumentationBuild`Info`GetNotebookHistoryData"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.8821085380956573`*^9, 3.8821283087412367`*^9, 
  3.882214582203443*^9, 3.882263328670849*^9, 3.8822916646628847`*^9, 
  3.882349857933424*^9},
 CellLabel->
  "During evaluation of \
In[9]:=",ExpressionUUID->"50e8d8c7-4811-46d3-8a5a-52e8fc55628a"],

Cell[BoxData[
 TemplateBox[{
  "DocumentationBuild`Info`GetNotebookHistoryData", "notfound", 
   "\"Could not find the history data for Excised\"", 2, 9, 36, 
   19309420012344080692, "Local", 
   "DocumentationBuild`Info`GetNotebookHistoryData"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.8821085380956573`*^9, 3.8821283087412367`*^9, 
  3.882214582203443*^9, 3.882263328670849*^9, 3.8822916646628847`*^9, 
  3.882349857941059*^9},
 CellLabel->
  "During evaluation of \
In[9]:=",ExpressionUUID->"5f388fe9-7cca-48f6-903f-06975a6bc12c"],

Cell[BoxData[
 TemplateBox[{
  "DocumentationBuild`Info`GetNotebookHistoryData", "notfound", 
   "\"Could not find the history data for Excised\"", 2, 9, 37, 
   19309420012344080692, "Local", 
   "DocumentationBuild`Info`GetNotebookHistoryData"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.8821085380956573`*^9, 3.8821283087412367`*^9, 
  3.882214582203443*^9, 3.882263328670849*^9, 3.8822916646628847`*^9, 
  3.882349857948657*^9},
 CellLabel->
  "During evaluation of \
In[9]:=",ExpressionUUID->"dc95de42-80a4-45ed-96b3-6fc413a6ba39"],

Cell[BoxData[
 TemplateBox[{
  "DocumentationBuild`Info`GetNotebookHistoryData", "notfound", 
   "\"Could not find the history data for Excised\"", 2, 9, 38, 
   19309420012344080692, "Local", 
   "DocumentationBuild`Info`GetNotebookHistoryData"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.8821085380956573`*^9, 3.8821283087412367`*^9, 
  3.882214582203443*^9, 3.882263328670849*^9, 3.8822916646628847`*^9, 
  3.882349857956156*^9},
 CellLabel->
  "During evaluation of \
In[9]:=",ExpressionUUID->"bc209418-8a1e-41d1-81d9-da8ec85149c8"],

Cell[BoxData[
 TemplateBox[{
  "DocumentationBuild`Info`GetNotebookHistoryData", "notfound", 
   "\"Could not find the history data for Excised\"", 2, 9, 39, 
   19309420012344080692, "Local", 
   "DocumentationBuild`Info`GetNotebookHistoryData"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.8821085380956573`*^9, 3.8821283087412367`*^9, 
  3.882214582203443*^9, 3.882263328670849*^9, 3.8822916646628847`*^9, 
  3.882349857963653*^9},
 CellLabel->
  "During evaluation of \
In[9]:=",ExpressionUUID->"0316362d-e3df-45d9-b50d-18db59a7503c"],

Cell[BoxData[
 TemplateBox[{
  "DocumentationBuild`Info`GetNotebookHistoryData", "notfound", 
   "\"Could not find the history data for Excised\"", 2, 9, 40, 
   19309420012344080692, "Local", 
   "DocumentationBuild`Info`GetNotebookHistoryData"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.8821085380956573`*^9, 3.8821283087412367`*^9, 
  3.882214582203443*^9, 3.882263328670849*^9, 3.8822916646628847`*^9, 
  3.882349857971155*^9},
 CellLabel->
  "During evaluation of \
In[9]:=",ExpressionUUID->"27f0f4ee-6eb1-4f2d-8951-9a1399607567"],

Cell[BoxData[
 TemplateBox[{
  "DocumentationBuild`Info`GetNotebookHistoryData", "notfound", 
   "\"Could not find the history data for Excised\"", 2, 9, 41, 
   19309420012344080692, "Local", 
   "DocumentationBuild`Info`GetNotebookHistoryData"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.8821085380956573`*^9, 3.8821283087412367`*^9, 
  3.882214582203443*^9, 3.882263328670849*^9, 3.8822916646628847`*^9, 
  3.8823498579786253`*^9},
 CellLabel->
  "During evaluation of \
In[9]:=",ExpressionUUID->"6fefa19f-a3ba-43d4-b084-1c4476384ed6"],

Cell[BoxData[
 TemplateBox[{
  "DocumentationBuild`Info`GetNotebookHistoryData", "notfound", 
   "\"Could not find the history data for Excised\"", 2, 9, 42, 
   19309420012344080692, "Local", 
   "DocumentationBuild`Info`GetNotebookHistoryData"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.8821085380956573`*^9, 3.8821283087412367`*^9, 
  3.882214582203443*^9, 3.882263328670849*^9, 3.8822916646628847`*^9, 
  3.8823498579860973`*^9},
 CellLabel->
  "During evaluation of \
In[9]:=",ExpressionUUID->"48d2ec91-de66-4748-b52f-a5335ac6aa84"],

Cell[BoxData[
 TemplateBox[{
  "DocumentationBuild`Info`GetNotebookHistoryData", "notfound", 
   "\"Could not find the history data for Excised\"", 2, 9, 43, 
   19309420012344080692, "Local", 
   "DocumentationBuild`Info`GetNotebookHistoryData"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.8821085380956573`*^9, 3.8821283087412367`*^9, 
  3.882214582203443*^9, 3.882263328670849*^9, 3.8822916646628847`*^9, 
  3.882349857993588*^9},
 CellLabel->
  "During evaluation of \
In[9]:=",ExpressionUUID->"9356071f-fa88-4eae-989d-c57a82664e17"],

Cell[BoxData[
 TemplateBox[{
  "DocumentationBuild`Info`GetNotebookHistoryData", "notfound", 
   "\"Could not find the history data for Excised\"", 2, 9, 44, 
   19309420012344080692, "Local", 
   "DocumentationBuild`Info`GetNotebookHistoryData"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.8821085380956573`*^9, 3.8821283087412367`*^9, 
  3.882214582203443*^9, 3.882263328670849*^9, 3.8822916646628847`*^9, 
  3.88234985819099*^9},
 CellLabel->
  "During evaluation of \
In[9]:=",ExpressionUUID->"80b8ab49-d616-47e8-a0a3-e9cae4e9f6b4"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["Success",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            FrameBox[
             StyleBox["\"\[Checkmark]\"", 
              Directive[
               RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
               25], StripOnInput -> False], ContentPadding -> False, 
             FrameStyle -> None, FrameMargins -> {{0, 0}, {0, 0}}, 
             StripOnInput -> False], 
            GridBox[{{
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"PacletArchive\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                 "\"/home/cookgb/Research/PublicPaclets/KerrModes/\
SWSpheroidal/build/SWSpheroidal-1.0.0.paclet\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "6.878703`", "\"s\"", "seconds", "\"Seconds\""}, 
                   "Quantity", SyntaxForm -> Mod], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            FrameBox[
             StyleBox["\"\[Checkmark]\"", 
              Directive[
               RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
               25], StripOnInput -> False], ContentPadding -> False, 
             FrameStyle -> None, FrameMargins -> {{0, 0}, {0, 0}}, 
             StripOnInput -> False], 
            GridBox[{{
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"PacletArchive\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                 "\"/home/cookgb/Research/PublicPaclets/KerrModes/\
SWSpheroidal/build/SWSpheroidal-1.0.0.paclet\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "6.878703`", "\"s\"", "seconds", "\"Seconds\""}, 
                   "Quantity", SyntaxForm -> Mod], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"PacletManifest\"", "\": \""}, "RowDefault"],
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   TagBox[
                    DynamicModuleBox[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
                    "InitialData" -> <|
                    "Files" -> {<|
                    "File" -> File["Kernel/SWSpheroidal.wl"], "Hash" -> 
                    "e7b8912a5a08bd2ebd3a3262e3f99f27c0aa5815f8103115f6935b5ad\
156e676"|>, <|"File" -> File["Documentation/English/Guides/SWSpheroidal.nb"], 
                    "Hash" -> 
                    "d276b3e7aca98ebc0033556ae0e06aac3b9560eba3191c85ee6e1a3dc\
44fec78"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
AngularSpectralRootIndex.nb"], "Hash" -> 
                    "97050038233c4abc789e8fd3eee065a442d0e6361f0a46ac6219a34d5\
0e2b3d3"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
AngularSpectralRoot.nb"], "Hash" -> 
                    "5ddaaa332be1875034c010b996109d68bc312c6fd14ca875888995662\
768b6f5"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/Method.\
nb"], "Hash" -> 
                    "5416b1460e0a6c04f3ca8a0d8f3f7fccba69ac79a847c2b57a95494b9\
3942fb3"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
PathStart.nb"], "Hash" -> 
                    "b9bfb36629dea764ae9489bbb7bb9e9409d7333087c81e5b5b03c4f70\
434bb09"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
Phiguess.nb"], "Hash" -> 
                    "a0201cd287aee58b34e9eebafed48bee823e88a991a777f7e9f00030c\
df26db7"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
PlotStart.nb"], "Hash" -> 
                    "71d4bd13c9996a5ca2aabd45b11ec0824e850b8e51c53d0760b06c174\
fb13883"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
PrintPoleValues.nb"], "Hash" -> 
                    "fbc6ab9c0726643917dfadac4f86cce9eb83e7dc1bc4990f9cd01db7b\
0a6f060"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
SpinWeightedSpheroidal.nb"], "Hash" -> 
                    "1705d1c8069f1603b1035b41302fb5e8907c62e60ad043c055b55061e\
c20bb66"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
StepSize.nb"], "Hash" -> 
                    "a7c2a8144f9dacc7989aa816b39e846a929e3a52f3729ff4f9a8fb708\
fbb66cb"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
SWSFfixphase.nb"], "Hash" -> 
                    "4bea970ee399bf34be7b31c6969a3fc72219e03bcecf7a5ef06c0e8a6\
1ae2498"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
SWSFRealPath.nb"], "Hash" -> 
                    "e261c1eb4d688ea5c1dc3c490b45dea47d6f4cee4d36fb7441b41134f\
7029209"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
SWSFvalues.nb"], "Hash" -> 
                    "04e7fd7c81038d45c1b99fa856c0e735b4ba7f33f4d601165baefcf9f\
6c6b923"|>, <|"File" -> 
                    File["Documentation/English/Tutorials/Spin-\
WeightedSpheroidalFunctions.nb"], "Hash" -> 
                    "b75f8ac678e671946dd86b67a4558a36f6fca236920a35152f1f04d64\
a2f774c"|>}|>, "AllowEmbedding" -> True, "InitialShape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, All, 
                    TypeSystem`PackageScope`KeyDummy[5]} -> 
                    1, {All, All, "File"} -> 1, {All, All, "Hash"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[56.00000000000001], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|
                    "File" -> TypeSystem`PackageScope`AtomShape[60], "Hash" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 2, {All, All}]], 15, 
                    DirectedInfinity[1], {All}]]], 1, 
                    DirectedInfinity[1], {}]], "InitialType" -> 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Struct[{"File", "Hash"}, {
                    TypeSystem`Atom[File], 
                    TypeSystem`Atom[String]}], 15], 1], "Meta" -> <||>, 
                    "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, All, 
                    TypeSystem`PackageScope`KeyDummy[5]} -> 
                    1, {All, All, "File"} -> 1, {All, All, "Hash"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[56.00000000000001], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|
                    "File" -> TypeSystem`PackageScope`AtomShape[60], "Hash" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 2, {All, All}]], 15, 
                    DirectedInfinity[1], {All}]]], 1, 
                    DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Struct[{"File", "Hash"}, {
                    TypeSystem`Atom[File], 
                    TypeSystem`Atom[String]}], 15], 1], "Path" -> {}, 
                    "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 2, 
                    "DataRowCount" -> 1, "DataColumnCount" -> 2, 
                    "SortPaths" -> {}, "SortDirections" -> {}, 
                    "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                    DynamicModule[{
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                    Style[
                    Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    Mouseover[
                    
                    Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]], 
                    Graphics[{
                    GrayLevel[0.6], 
                    
                    Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, Keys}, "KeyDummy", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["File", 
                    Style[
                    "File", FontColor -> RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "File"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "File"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Hash", 
                    Style[
                    "Hash", FontColor -> RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "Hash"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "Hash"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Files", 
                    Style[
                    "Files", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Files"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/SWSpheroidal.wl"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 1, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "e7b8912a5a08bd2ebd3a3262e3f99f27c0aa5815f8103115f6935b5ad\
156e676", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 1, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Documentation/English/Guides/SWSpheroidal.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 2, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "d276b3e7aca98ebc0033556ae0e06aac3b9560eba3191c85ee6e1a3dc\
44fec78", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 2, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
AngularSpectralRootIndex.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 3, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "97050038233c4abc789e8fd3eee065a442d0e6361f0a46ac6219a34d5\
0e2b3d3", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 3, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
AngularSpectralRoot.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 4, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "5ddaaa332be1875034c010b996109d68bc312c6fd14ca875888995662\
768b6f5", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 4, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/Method.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 5, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "5416b1460e0a6c04f3ca8a0d8f3f7fccba69ac79a847c2b57a95494b9\
3942fb3", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 5, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/PathStart.\
nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 6, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "b9bfb36629dea764ae9489bbb7bb9e9409d7333087c81e5b5b03c4f70\
434bb09", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 6, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/Phiguess.\
nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 7, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "a0201cd287aee58b34e9eebafed48bee823e88a991a777f7e9f00030c\
df26db7", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 7, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/PlotStart.\
nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 8, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "71d4bd13c9996a5ca2aabd45b11ec0824e850b8e51c53d0760b06c174\
fb13883", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 8, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
PrintPoleValues.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 9, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "fbc6ab9c0726643917dfadac4f86cce9eb83e7dc1bc4990f9cd01db7b\
0a6f060", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 9, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
SpinWeightedSpheroidal.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 10, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "1705d1c8069f1603b1035b41302fb5e8907c62e60ad043c055b55061e\
c20bb66", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 10, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/StepSize.\
nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 11, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "a7c2a8144f9dacc7989aa816b39e846a929e3a52f3729ff4f9a8fb708\
fbb66cb", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 11, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
SWSFfixphase.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 12, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "4bea970ee399bf34be7b31c6969a3fc72219e03bcecf7a5ef06c0e8a6\
1ae2498", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 12, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
SWSFRealPath.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 13, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "e261c1eb4d688ea5c1dc3c490b45dea47d6f4cee4d36fb7441b41134f\
7029209", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 13, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/SWSFvalues.\
nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 14, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "04e7fd7c81038d45c1b99fa856c0e735b4ba7f33f4d601165baefcf9f\
6c6b923", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 14, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/Tutorials/Spin-\
WeightedSpheroidalFunctions.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 15, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "b75f8ac678e671946dd86b67a4558a36f6fca236920a35152f1f04d64\
a2f774c", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 15, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}}, 
                    BaseStyle -> {
                    ContextMenu -> 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                    "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                    Dividers -> All, FrameStyle -> 
                    GrayLevel[0.7490196078431373], Spacings -> {0, 0}, 
                    Alignment -> Left, 
                    BaseStyle -> {
                    FontFamily -> "Source Sans Pro", FontSize -> 14, 
                    FontWeight -> Plain}], LineBreakWithin -> False, 
                    ContextMenu -> {}, NumberMarks -> False, ShowAutoStyles -> 
                    False]], TypeSystem`NestedGrid`PackagePrivate`initialQ = 
                    True}, 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`datasetData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
                    DynamicModuleValues :> {}], 
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`SubViewPathbar[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = 
                    Style[
                    Framed[
                    Dynamic[
                    Replace[
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                    Blank[]] -> "", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                    Blank[]], 
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                    Blank[]], 
                    Pattern[
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Blank[]]] :> (
                    Increment[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                    TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader = TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path$, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                    Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
                    FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
                    Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 
                    1], TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$\
}, 
                    DynamicWrapperBox[
                    DynamicBox[
                    ToBoxes[
                    Dataset`DatasetContent[
                    2, "Path" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
                    "Grid" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    "VPos" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
                    "TopBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
                    "BottomBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
                    "OutputID" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
                    StandardForm], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                    MouseAnnotation[]], 
                    Initialization :> (
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
                    CreateUUID[]), DynamicModuleValues :> {}, 
                    BaseStyle -> {LineBreakWithin -> False}, 
                    UnsavedVariables :> {
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}], 
                    Deploy, DefaultBaseStyle -> "Deploy"], 
                   Dataset`InterpretDataset[1], Selectable -> False, Editable -> 
                   False, SelectWithContents -> True], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  
                  TemplateBox[{"\"DocumentationBuildResults\"", "\": \""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    InterpretationBox[
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Documentation build completed successfully.\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.762724`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Documentation build completed successfully.\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.762724`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"MaximumFileTime\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    
                    TemplateBox[{"0.714476`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], ",", 
                    "\"/home/cookgb/Research/PublicPaclets/KerrModes/\
SWSpheroidal/Documentation/English/Guides/SWSpheroidal.nb\""}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"ProcessedFiles\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"\[LeftAssociation]", 
                    
                    RowBox[{
                    "\"/home/cookgb/Research/PublicPaclets/KerrModes/\
SWSpheroidal/Documentation/English/Guides/SWSpheroidal.nb\"", "\[Rule]", 
                    InterpretationBox[
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.714476`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Time\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"0.714476`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"BuildDocumentationNotebook\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    Success[
                    "BuildDocumentationNotebook", <|
                    "Time" -> Quantity[0.714476, "Seconds"]|>], Selectable -> 
                    False, Editable -> False, SelectWithContents -> True]}], 
                    "\[RightAssociation]"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"FailedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PercentSucceeded\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"100.`", "\"%\"", "percent", "\"Percent\""}, 
                    "QuantityPostfix", SyntaxForm -> Mod], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"ProcessedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"SuccessfulFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"SkippedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"DocumentationBuild\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    Success[
                    "DocumentationBuild", <|
                    "TotalTime" -> Quantity[0.762724, "Seconds"], 
                    "MaximumFileTime" -> {
                    Quantity[0.714476, "Seconds"], 
                    "/home/cookgb/Research/PublicPaclets/KerrModes/\
SWSpheroidal/Documentation/English/Guides/SWSpheroidal.nb"}, 
                    "ProcessedFiles" -> <|
                    "/home/cookgb/Research/PublicPaclets/KerrModes/\
SWSpheroidal/Documentation/English/Guides/SWSpheroidal.nb" -> 
                    Success[
                    "BuildDocumentationNotebook", <|
                    "Time" -> Quantity[0.714476, "Seconds"]|>]|>, 
                    "FailedFilesCount" -> 0, "PercentSucceeded" -> 
                    Quantity[100., "Percent"], "ProcessedFilesCount" -> 1, 
                    "SuccessfulFilesCount" -> 1, "SkippedFilesCount" -> 0, 
                    "MessageTemplate" -> 
                    "Documentation build completed successfully."|>], 
                    Selectable -> False, Editable -> False, 
                    SelectWithContents -> True], "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\"PacletBuild\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Success[
  "PacletBuild", <|
   "PacletArchive" -> 
    "/home/cookgb/Research/PublicPaclets/KerrModes/SWSpheroidal/build/\
SWSpheroidal-1.0.0.paclet", "TotalTime" -> Quantity[6.878703, "Seconds"], 
    "PacletManifest" -> 
    Dataset[<|"Files" -> {<|
         "File" -> File["Kernel/SWSpheroidal.wl"], "Hash" -> 
          "e7b8912a5a08bd2ebd3a3262e3f99f27c0aa5815f8103115f6935b5ad156e676"|>\
, <|"File" -> File["Documentation/English/Guides/SWSpheroidal.nb"], "Hash" -> 
          "d276b3e7aca98ebc0033556ae0e06aac3b9560eba3191c85ee6e1a3dc44fec78"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/\
AngularSpectralRootIndex.nb"], "Hash" -> 
          "97050038233c4abc789e8fd3eee065a442d0e6361f0a46ac6219a34d50e2b3d3"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/\
AngularSpectralRoot.nb"], "Hash" -> 
          "5ddaaa332be1875034c010b996109d68bc312c6fd14ca875888995662768b6f5"|>\
, <|"File" -> File["Documentation/English/ReferencePages/Symbols/Method.nb"], 
          "Hash" -> 
          "5416b1460e0a6c04f3ca8a0d8f3f7fccba69ac79a847c2b57a95494b93942fb3"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/PathStart.nb"], 
          "Hash" -> 
          "b9bfb36629dea764ae9489bbb7bb9e9409d7333087c81e5b5b03c4f70434bb09"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/Phiguess.nb"], 
          "Hash" -> 
          "a0201cd287aee58b34e9eebafed48bee823e88a991a777f7e9f00030cdf26db7"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/PlotStart.nb"], 
          "Hash" -> 
          "71d4bd13c9996a5ca2aabd45b11ec0824e850b8e51c53d0760b06c174fb13883"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/PrintPoleValues.\
nb"], "Hash" -> 
          "fbc6ab9c0726643917dfadac4f86cce9eb83e7dc1bc4990f9cd01db7b0a6f060"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/\
SpinWeightedSpheroidal.nb"], "Hash" -> 
          "1705d1c8069f1603b1035b41302fb5e8907c62e60ad043c055b55061ec20bb66"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/StepSize.nb"], 
          "Hash" -> 
          "a7c2a8144f9dacc7989aa816b39e846a929e3a52f3729ff4f9a8fb708fbb66cb"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/SWSFfixphase.nb"]\
, "Hash" -> 
          "4bea970ee399bf34be7b31c6969a3fc72219e03bcecf7a5ef06c0e8a61ae2498"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/SWSFRealPath.nb"]\
, "Hash" -> 
          "e261c1eb4d688ea5c1dc3c490b45dea47d6f4cee4d36fb7441b41134f7029209"|>\
, <|"File" -> 
          File["Documentation/English/ReferencePages/Symbols/SWSFvalues.nb"], 
          "Hash" -> 
          "04e7fd7c81038d45c1b99fa856c0e735b4ba7f33f4d601165baefcf9f6c6b923"|>\
, <|"File" -> 
          File["Documentation/English/Tutorials/Spin-\
WeightedSpheroidalFunctions.nb"], "Hash" -> 
          "b75f8ac678e671946dd86b67a4558a36f6fca236920a35152f1f04d64a2f774c"|>\
}|>, 
      TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Vector[
        TypeSystem`Struct[{"File", "Hash"}, {
          TypeSystem`Atom[File], 
          TypeSystem`Atom[String]}], 15], 1], <||>], 
    "DocumentationBuildResults" -> {
      Success[
      "DocumentationBuild", <|
       "TotalTime" -> Quantity[0.762724, "Seconds"], "MaximumFileTime" -> {
          Quantity[0.714476, "Seconds"], 
          "/home/cookgb/Research/PublicPaclets/KerrModes/SWSpheroidal/\
Documentation/English/Guides/SWSpheroidal.nb"}, 
        "ProcessedFiles" -> <|
         "/home/cookgb/Research/PublicPaclets/KerrModes/SWSpheroidal/\
Documentation/English/Guides/SWSpheroidal.nb" -> 
          Success["BuildDocumentationNotebook", <|
            "Time" -> Quantity[0.714476, "Seconds"]|>]|>, "FailedFilesCount" -> 
        0, "PercentSucceeded" -> Quantity[100., "Percent"], 
        "ProcessedFilesCount" -> 1, "SuccessfulFilesCount" -> 1, 
        "SkippedFilesCount" -> 0, "MessageTemplate" -> 
        "Documentation build completed successfully."|>]}|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8821085528222322`*^9, 3.882128312338359*^9, 
  3.882214583488969*^9, 3.8822633451313353`*^9, 3.882291667112372*^9, 
  3.882349863056068*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"18d4ed8a-b6ea-40c1-9c91-0390e0643978"]
}, Open  ]],

Cell[CellGroupData[{

Cell["KerrModes Package Documents", "Section",
 CellChangeTimes->{{3.8795860375865917`*^9, 3.879586051818118*^9}, {
  3.8795861011219053`*^9, 3.879586105239852*^9}, {3.88072639270462*^9, 
  3.880726394083274*^9}},ExpressionUUID->"53cd0542-dd59-4cc7-bfa1-\
cdc441dee081"],

Cell[BoxData[
 RowBox[{"PacletFind", "[", "\"\<KerrModes\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.879500805235086*^9, 3.879500824427189*^9}, {
  3.880726403671331*^9, 3.8807264054931707`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"010a8505-fb6b-4be3-bd0d-517587a4e102"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NotebookOpen", "[", 
  RowBox[{"Echo", "@", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
     "PacletDir", ",", "\"\<KerrModes\>\"", ",", "\"\<build\>\"", ",", 
      "\"\<KerrModes\>\"", ",", "\"\<Documentation\>\"", ",", 
      "\"\<English\>\"", ",", "\"\<ReferencePages\>\"", ",", 
      "\"\<Symbols\>\"", ",", "\"\<ModePlotOmega.nb\>\""}], "}"}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.879504467784739*^9, 3.879504512535911*^9}, {
   3.8795161046692877`*^9, 3.8795161103837423`*^9}, 3.880726352981681*^9, {
   3.880726422890646*^9, 3.8807264353968697`*^9}, {3.880726582833086*^9, 
   3.880726586683797*^9}, {3.880726862675466*^9, 3.880726959042717*^9}, {
   3.8807274292351923`*^9, 3.880727443314166*^9}, {3.8810789256421003`*^9, 
   3.881078949051998*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"1ce435ed-2ac0-4a83-b4e7-d5944842091b"],

Cell[BoxData["\<\"/Users/cookgb/Research/PublicPaclets/KerrModes/KerrModes/\
build/KerrModes/Documentation/English/ReferencePages/Symbols/ModePlotOmega.nb\
\"\>"], "Echo",
 CellChangeTimes->{
  3.881078952096168*^9},ExpressionUUID->"756bf92d-daa8-4191-97d1-\
98be85d2b796"],

Cell[BoxData[
 TemplateBox[<|
  "obj" -> NotebookObject[
    "cc94c1dd-a1c6-42d4-9a8d-71312f260ec4", 
     "ebb6f386-ca8d-4504-be73-6121f02c38d5"], "label" -> "\"ModePlotOmega\"", 
   "tooltip" -> 
   "\"/Users/cookgb/Research/PublicPaclets/KerrModes/KerrModes/build/\
KerrModes/Documentation/English/ReferencePages/Symbols/ModePlotOmega.nb\""|>,
  "NotebookObjectUUIDs"]], "Output",
 CellChangeTimes->{{3.881078936840488*^9, 3.881078952884714*^9}},
 CellLabel->"Out[6]=",ExpressionUUID->"f22a6d56-dfa6-49cc-a12f-c5ac180e2c94"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NotebookOpen", "[", 
  RowBox[{"Echo", "@", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
     "PacletDir", ",", "\"\<KerrModes\>\"", ",", "\"\<build\>\"", ",", 
      "\"\<KerrModes\>\"", ",", "\"\<Documentation\>\"", ",", 
      "\"\<English\>\"", ",", "\"\<ReferencePages\>\"", ",", 
      "\"\<Symbols\>\"", ",", "\"\<ModePlotA.nb\>\""}], "}"}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.879504467784739*^9, 3.879504512535911*^9}, {
   3.8795161046692877`*^9, 3.8795161103837423`*^9}, 3.880726352981681*^9, {
   3.880726422890646*^9, 3.8807264353968697`*^9}, {3.880726582833086*^9, 
   3.880726586683797*^9}, {3.880726862675466*^9, 3.880726959042717*^9}, {
   3.8807274292351923`*^9, 3.880727443314166*^9}, {3.8810789256421003`*^9, 
   3.881078949051998*^9}, 3.881078995131796*^9},
 CellLabel->"In[7]:=",ExpressionUUID->"26df6a34-71a9-4a4d-9419-f06737608595"],

Cell[BoxData["\<\"/Users/cookgb/Research/PublicPaclets/KerrModes/KerrModes/\
build/KerrModes/Documentation/English/ReferencePages/Symbols/ModePlotA.nb\"\>\
"], "Echo",
 CellChangeTimes->{
  3.881078996718182*^9},ExpressionUUID->"33c0395f-8fc5-4925-b30d-\
5c7182e3b024"],

Cell[BoxData[
 TemplateBox[<|
  "obj" -> NotebookObject[
    "abe29db1-fc92-4e2c-9405-59e18c511cc9", 
     "092b2004-9b26-43f0-b478-bab55103b8a5"], "label" -> "\"ModePlotA\"", 
   "tooltip" -> 
   "\"/Users/cookgb/Research/PublicPaclets/KerrModes/KerrModes/build/\
KerrModes/Documentation/English/ReferencePages/Symbols/ModePlotA.nb\""|>,
  "NotebookObjectUUIDs"]], "Output",
 CellChangeTimes->{3.881078997512292*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"bf41f173-3954-454d-8f89-8b79adefbcdf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NotebookOpen", "[", 
  RowBox[{"Echo", "@", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
     "PacletDir", ",", "\"\<KerrModes\>\"", ",", "\"\<build\>\"", ",", 
      "\"\<KerrModes\>\"", ",", "\"\<Documentation\>\"", ",", 
      "\"\<English\>\"", ",", "\"\<ReferencePages\>\"", ",", 
      "\"\<Symbols\>\"", ",", "\"\<KerrModeSequence.nb\>\""}], "}"}], "]"}]}],
   "]"}]], "Input",
 CellChangeTimes->{{3.879504467784739*^9, 3.879504512535911*^9}, {
   3.8795161046692877`*^9, 3.8795161103837423`*^9}, 3.880726352981681*^9, {
   3.880726422890646*^9, 3.8807264353968697`*^9}, {3.880726582833086*^9, 
   3.880726586683797*^9}, {3.880726862675466*^9, 3.880726959042717*^9}, {
   3.8807274292351923`*^9, 3.880727443314166*^9}, {3.88072759480514*^9, 
   3.88072759858635*^9}, {3.8807277201745453`*^9, 3.880727721774328*^9}, {
   3.880727918080144*^9, 3.8807279195069017`*^9}, {3.880728004963108*^9, 
   3.880728008391794*^9}, {3.880732865620488*^9, 3.880732873459075*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"0ab1b367-7584-40f4-b032-83c051586c2e"],

Cell[BoxData["\<\"/Users/cookgb/Research/PublicPaclets/KerrModes/KerrModes/\
build/KerrModes/Documentation/English/ReferencePages/Symbols/KerrModeSequence.\
nb\"\>"], "Echo",
 CellChangeTimes->{
  3.880800428984685*^9},ExpressionUUID->"bf0c39c6-7d24-4e33-8cf6-\
f73c5a244f1a"],

Cell[BoxData[
 TemplateBox[<|
  "obj" -> NotebookObject[
    "ace3afa9-f434-44aa-aee5-b398799ce25b", 
     "a0416623-ea10-45bc-976a-373ab67f5711"], "label" -> 
   "\"KerrModeSequence\"", "tooltip" -> 
   "\"/Users/cookgb/Research/PublicPaclets/KerrModes/KerrModes/build/\
KerrModes/Documentation/English/ReferencePages/Symbols/KerrModeSequence.nb\""|>,
  "NotebookObjectUUIDs"]], "Output",
 CellChangeTimes->{3.880732894172594*^9, 3.880795230512925*^9, 
  3.880795579957567*^9, 3.88079571268088*^9, 3.8807959501910057`*^9, 
  3.8807960155945168`*^9, 3.880796268236443*^9, 3.88079883978577*^9, 
  3.880798963186754*^9, 3.880798995065124*^9, 3.880799094841189*^9, 
  3.8807991971579847`*^9, 3.880799638209127*^9, 3.8808004294550257`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"c6176ae2-1237-4048-ad1d-fb41dbedb4e5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NotebookOpen", "[", 
  RowBox[{"Echo", "@", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
     "PacletDir", ",", "\"\<KerrModes\>\"", ",", "\"\<build\>\"", ",", 
      "\"\<KerrModes\>\"", ",", "\"\<Documentation\>\"", ",", 
      "\"\<English\>\"", ",", "\"\<ReferencePages\>\"", ",", 
      "\"\<Symbols\>\"", ",", "\"\<KerrModeRefineSequence.nb\>\""}], "}"}], 
    "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.879504467784739*^9, 3.879504512535911*^9}, {
   3.8795161046692877`*^9, 3.8795161103837423`*^9}, 3.880726352981681*^9, {
   3.880726422890646*^9, 3.8807264353968697`*^9}, {3.880726582833086*^9, 
   3.880726586683797*^9}, {3.880726862675466*^9, 3.880726959042717*^9}, {
   3.8807274292351923`*^9, 3.880727443314166*^9}, {3.88072759480514*^9, 
   3.88072759858635*^9}, {3.8807277201745453`*^9, 3.880727721774328*^9}, {
   3.880727918080144*^9, 3.8807279195069017`*^9}, {3.880728004963108*^9, 
   3.880728008391794*^9}, {3.880732865620488*^9, 3.88073288318466*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"18de6259-cbfa-49d2-925b-a83770c35b01"],

Cell[BoxData["\<\"/Users/cookgb/Research/PublicPaclets/KerrModes/KerrModes/\
build/KerrModes/Documentation/English/ReferencePages/Symbols/\
KerrModeRefineSequence.nb\"\>"], "Echo",
 CellChangeTimes->{
  3.880799669016843*^9},ExpressionUUID->"d93ebce6-fec4-4212-96e9-\
ac0fed52fba5"],

Cell[BoxData[
 TemplateBox[<|
  "obj" -> NotebookObject[
    "b1e32347-c31c-4514-84ee-029823923c89", 
     "2a7f2c8a-10c4-4f86-be56-69b95a0b8cca"], "label" -> 
   "\"KerrModeRefineSequence\"", "tooltip" -> 
   "\"/Users/cookgb/Research/PublicPaclets/KerrModes/KerrModes/build/\
KerrModes/Documentation/English/ReferencePages/Symbols/KerrModeRefineSequence.\
nb\""|>,
  "NotebookObjectUUIDs"]], "Output",
 CellChangeTimes->{3.880732907404324*^9, 3.8807952061019373`*^9, 
  3.8807955960665007`*^9, 3.880796316033663*^9, 3.88079895484958*^9, 
  3.8807991151007566`*^9, 3.880799669317842*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"af11a7a3-1385-4404-8f38-9c95c9c43c07"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NotebookOpen", "[", 
  RowBox[{"Echo", "@", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
     "PacletDir", ",", "\"\<KerrModes\>\"", ",", "\"\<build\>\"", ",", 
      "\"\<KerrModes\>\"", ",", "\"\<Documentation\>\"", ",", 
      "\"\<English\>\"", ",", "\"\<ReferencePages\>\"", ",", 
      "\"\<Symbols\>\"", ",", "\"\<SchwarzschildMode.nb\>\""}], "}"}], 
    "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.879504467784739*^9, 3.879504512535911*^9}, {
   3.8795161046692877`*^9, 3.8795161103837423`*^9}, 3.880726352981681*^9, {
   3.880726422890646*^9, 3.8807264353968697`*^9}, {3.880726582833086*^9, 
   3.880726586683797*^9}, {3.880726862675466*^9, 3.880726959042717*^9}, {
   3.8807274292351923`*^9, 3.880727443314166*^9}, {3.88072759480514*^9, 
   3.88072759858635*^9}, {3.8807277201745453`*^9, 3.880727721774328*^9}, {
   3.880727918080144*^9, 3.8807279195069017`*^9}, {3.880728004963108*^9, 
   3.880728008391794*^9}, {3.880732865620488*^9, 3.88073288318466*^9}, {
   3.88083448553738*^9, 3.880834490418222*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"9fb22665-7704-496a-b6c7-ad93214bbddb"],

Cell[BoxData["\<\"/Users/cookgb/Research/PublicPaclets/KerrModes/KerrModes/\
build/KerrModes/Documentation/English/ReferencePages/Symbols/\
SchwarzschildMode.nb\"\>"], "Echo",
 CellChangeTimes->{
  3.8808344926032047`*^9},ExpressionUUID->"1f664df6-17cc-4e79-b007-\
a6cb4b506d30"],

Cell[BoxData[
 TemplateBox[<|
  "obj" -> NotebookObject[
    "a31903cf-31d5-4a47-a121-f39423e3e619", 
     "ab186ebe-26e8-4b4b-b524-8c683225d6ee"], "label" -> 
   "\"SchwarzschildMode\"", "tooltip" -> 
   "\"/Users/cookgb/Research/PublicPaclets/KerrModes/KerrModes/build/\
KerrModes/Documentation/English/ReferencePages/Symbols/SchwarzschildMode.nb\"\
"|>,
  "NotebookObjectUUIDs"]], "Output",
 CellChangeTimes->{3.8808344930551357`*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"1869cec1-8fb0-4b5b-bb17-e72e6045ae0d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NotebookOpen", "[", 
  RowBox[{"Echo", "@", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
     "PacletDir", ",", "\"\<KerrModes\>\"", ",", "\"\<build\>\"", ",", 
      "\"\<KerrModes\>\"", ",", "\"\<Documentation\>\"", ",", 
      "\"\<English\>\"", ",", "\"\<ReferencePages\>\"", ",", 
      "\"\<Symbols\>\"", ",", "\"\<RadialLentzRoot.nb\>\""}], "}"}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.879504467784739*^9, 3.879504512535911*^9}, {
   3.8795161046692877`*^9, 3.8795161103837423`*^9}, 3.880726352981681*^9, {
   3.880726422890646*^9, 3.8807264353968697`*^9}, {3.880726582833086*^9, 
   3.880726586683797*^9}, {3.880726862675466*^9, 3.880726959042717*^9}, {
   3.8807274292351923`*^9, 3.880727443314166*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"86356931-6a90-4c82-88bc-c9b3950688f6"],

Cell[BoxData["\<\"/Users/cookgb/Research/PublicPaclets/KerrModes/KerrModes/\
build/KerrModes/Documentation/English/ReferencePages/Symbols/RadialLentzRoot.\
nb\"\>"], "Echo",
 CellChangeTimes->{
  3.880796282206162*^9},ExpressionUUID->"9f80d295-a533-40c4-899d-\
cab381ed1512"],

Cell[BoxData[
 TemplateBox[<|
  "obj" -> NotebookObject[
    "1e966e4b-6e93-464d-ada2-18feeb91abf0", 
     "7009dfe5-0130-4fdc-9d36-a41a20b30ded"], "label" -> 
   "\"RadialLentzRoot\"", "tooltip" -> 
   "\"/Users/cookgb/Research/PublicPaclets/KerrModes/KerrModes/build/\
KerrModes/Documentation/English/ReferencePages/Symbols/RadialLentzRoot.nb\""|>,
  "NotebookObjectUUIDs"]], "Output",
 CellChangeTimes->{
  3.880726588125203*^9, 3.880726738760379*^9, {3.8807268645592613`*^9, 
   3.880726960144514*^9}, 3.880727451491528*^9, 3.880732929784781*^9, 
   3.880796282655045*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"35131922-10ef-4ad6-b99b-f3176418948c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NotebookOpen", "[", 
  RowBox[{"Echo", "@", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
     "PacletDir", ",", "\"\<KerrModes\>\"", ",", "\"\<build\>\"", ",", 
      "\"\<KerrModes\>\"", ",", "\"\<Documentation\>\"", ",", 
      "\"\<English\>\"", ",", "\"\<ReferencePages\>\"", ",", 
      "\"\<Symbols\>\"", ",", "\"\<ModeSolution.nb\>\""}], "}"}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.879504467784739*^9, 3.879504512535911*^9}, {
   3.8795161046692877`*^9, 3.8795161103837423`*^9}, 3.880726352981681*^9, {
   3.880726422890646*^9, 3.8807264353968697`*^9}, {3.880726582833086*^9, 
   3.880726586683797*^9}, {3.880726862675466*^9, 3.880726959042717*^9}, {
   3.8807274292351923`*^9, 3.880727443314166*^9}, {3.8807275534794188`*^9, 
   3.88072755853204*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"9973e64c-59ca-45a3-83e4-ede5559303b9"],

Cell[BoxData["\<\"/Users/cookgb/Research/PublicPaclets/KerrModes/KerrModes/\
build/KerrModes/Documentation/English/ReferencePages/Symbols/ModeSolution.nb\"\
\>"], "Echo",
 CellChangeTimes->{
  3.88072755935253*^9},ExpressionUUID->"32ce0db9-a373-4d26-a729-b6e068a9f028"],

Cell[BoxData[
 TemplateBox[<|
  "obj" -> NotebookObject[
    "a6e6cae9-f971-4d7f-8da5-0d0b8d6c81c9", 
     "64696341-5faf-4e96-a121-86b78dd852ca"], "label" -> "\"ModeSolution\"", 
   "tooltip" -> 
   "\"/Users/cookgb/Research/PublicPaclets/KerrModes/KerrModes/build/\
KerrModes/Documentation/English/ReferencePages/Symbols/ModeSolution.nb\""|>,
  "NotebookObjectUUIDs"]], "Output",
 CellChangeTimes->{3.8807275600806723`*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"0d4adf40-123f-4c53-90a4-21f662186b70"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NotebookOpen", "[", 
  RowBox[{"Echo", "@", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
     "PacletDir", ",", "\"\<KerrModes\>\"", ",", "\"\<build\>\"", ",", 
      "\"\<KerrModes\>\"", ",", "\"\<Documentation\>\"", ",", 
      "\"\<English\>\"", ",", "\"\<ReferencePages\>\"", ",", 
      "\"\<Symbols\>\"", ",", "\"\<ShortenModeSequence.nb\>\""}], "}"}], 
    "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.879504467784739*^9, 3.879504512535911*^9}, {
   3.8795161046692877`*^9, 3.8795161103837423`*^9}, 3.880726352981681*^9, {
   3.880726422890646*^9, 3.8807264353968697`*^9}, {3.880726582833086*^9, 
   3.880726586683797*^9}, {3.880726862675466*^9, 3.880726959042717*^9}, {
   3.8807274292351923`*^9, 3.880727443314166*^9}, {3.88072759480514*^9, 
   3.88072759858635*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"641a76aa-a346-4933-b77e-e85ccb354812"],

Cell[BoxData["\<\"/Users/cookgb/Research/PublicPaclets/KerrModes/KerrModes/\
build/KerrModes/Documentation/English/ReferencePages/Symbols/\
ShortenModeSequence.nb\"\>"], "Echo",
 CellChangeTimes->{
  3.880727599873089*^9},ExpressionUUID->"c82b8eb7-4e96-43f9-aeab-\
bcbc8e9fe67b"],

Cell[BoxData[
 TemplateBox[<|
  "obj" -> NotebookObject[
    "e2de16d9-b935-4952-b9aa-c25cd08686ce", 
     "8258fcb8-5248-4913-89e4-a21a718f959f"], "label" -> 
   "\"ShortenModeSequence\"", "tooltip" -> 
   "\"/Users/cookgb/Research/PublicPaclets/KerrModes/KerrModes/build/\
KerrModes/Documentation/English/ReferencePages/Symbols/ShortenModeSequence.nb\
\""|>,
  "NotebookObjectUUIDs"]], "Output",
 CellChangeTimes->{3.880727600575905*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"8d875c4b-3350-4102-a83e-e8f25f00d5f4"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"NotebookOpen", "[", 
  RowBox[{"Echo", "@", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
     "PacletDir", ",", "\"\<KerrModes\>\"", ",", "\"\<build\>\"", ",", 
      "\"\<KerrModes\>\"", ",", "\"\<Documentation\>\"", ",", 
      "\"\<English\>\"", ",", "\"\<ReferencePages\>\"", ",", 
      "\"\<Symbols\>\"", ",", "\"\<ShortenModeSequence.nb\>\""}], "}"}], 
    "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.879504467784739*^9, 3.879504512535911*^9}, {
   3.8795161046692877`*^9, 3.8795161103837423`*^9}, 3.880726352981681*^9, {
   3.880726422890646*^9, 3.8807264353968697`*^9}, {3.880726582833086*^9, 
   3.880726586683797*^9}, {3.880726862675466*^9, 3.880726959042717*^9}, {
   3.8807274292351923`*^9, 3.880727443314166*^9}, {3.88072759480514*^9, 
   3.88072759858635*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"82fbcfe9-bd79-4436-b5f7-3f07ce6f38de"],

Cell[BoxData[
 RowBox[{"NotebookOpen", "[", 
  RowBox[{"Echo", "@", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
     "PacletDir", ",", "\"\<KerrModes\>\"", ",", "\"\<build\>\"", ",", 
      "\"\<KerrModes\>\"", ",", "\"\<Documentation\>\"", ",", 
      "\"\<English\>\"", ",", "\"\<ReferencePages\>\"", ",", 
      "\"\<Symbols\>\"", ",", "\"\<ShortenModeSequence.nb\>\""}], "}"}], 
    "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.879504467784739*^9, 3.879504512535911*^9}, {
   3.8795161046692877`*^9, 3.8795161103837423`*^9}, 3.880726352981681*^9, {
   3.880726422890646*^9, 3.8807264353968697`*^9}, {3.880726582833086*^9, 
   3.880726586683797*^9}, {3.880726862675466*^9, 3.880726959042717*^9}, {
   3.8807274292351923`*^9, 3.880727443314166*^9}, {3.88072759480514*^9, 
   3.88072759858635*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"60206c08-1f5c-43ab-af41-35fbcfc8f473"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NotebookOpen", "[", 
  RowBox[{"Echo", "@", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
     "PacletDir", ",", "\"\<KerrModes\>\"", ",", "\"\<build\>\"", ",", 
      "\"\<KerrModes\>\"", ",", "\"\<Documentation\>\"", ",", 
      "\"\<English\>\"", ",", "\"\<ReferencePages\>\"", ",", 
      "\"\<Symbols\>\"", ",", "\"\<KerrModeMakeMultiplet.nb\>\""}], "}"}], 
    "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.879504467784739*^9, 3.879504512535911*^9}, {
   3.8795161046692877`*^9, 3.8795161103837423`*^9}, 3.880726352981681*^9, {
   3.880726422890646*^9, 3.8807264353968697`*^9}, {3.880726582833086*^9, 
   3.880726586683797*^9}, {3.880726862675466*^9, 3.880726959042717*^9}, {
   3.8807274292351923`*^9, 3.880727443314166*^9}, {3.88072759480514*^9, 
   3.88072759858635*^9}, {3.880727632401938*^9, 3.8807276376358347`*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"da24b737-0e4f-4f56-9f7c-e0c9905aff7d"],

Cell[BoxData["\<\"/Users/cookgb/Research/PublicPaclets/KerrModes/KerrModes/\
build/KerrModes/Documentation/English/ReferencePages/Symbols/\
KerrModeMakeMultiplet.nb\"\>"], "Echo",
 CellChangeTimes->{
  3.8807276386565857`*^9},ExpressionUUID->"d4289079-21fa-4da2-9096-\
1f17e50f2d42"],

Cell[BoxData[
 TemplateBox[<|
  "obj" -> NotebookObject[
    "34699735-3a75-4430-a67e-e4576d314095", 
     "e999a59e-1330-4bc3-81db-88135c160cd2"], "label" -> 
   "\"KerrModeMakeMultiplet\"", "tooltip" -> 
   "\"/Users/cookgb/Research/PublicPaclets/KerrModes/KerrModes/build/\
KerrModes/Documentation/English/ReferencePages/Symbols/KerrModeMakeMultiplet.\
nb\""|>,
  "NotebookObjectUUIDs"]], "Output",
 CellChangeTimes->{3.880727639372841*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"7cfc092c-8438-4f06-bfc8-68b759d3951c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NotebookOpen", "[", 
  RowBox[{"Echo", "@", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
     "PacletDir", ",", "\"\<KerrModes\>\"", ",", "\"\<build\>\"", ",", 
      "\"\<KerrModes\>\"", ",", "\"\<Documentation\>\"", ",", 
      "\"\<English\>\"", ",", "\"\<ReferencePages\>\"", ",", 
      "\"\<Symbols\>\"", ",", "\"\<SetSpinWeight.nb\>\""}], "}"}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.879504467784739*^9, 3.879504512535911*^9}, {
   3.8795161046692877`*^9, 3.8795161103837423`*^9}, 3.880726352981681*^9, {
   3.880726422890646*^9, 3.8807264353968697`*^9}, {3.880726582833086*^9, 
   3.880726586683797*^9}, {3.880726862675466*^9, 3.880726959042717*^9}, {
   3.8807274292351923`*^9, 3.880727443314166*^9}, {3.88072759480514*^9, 
   3.88072759858635*^9}, {3.880727669635706*^9, 3.88072767231636*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"98e50c56-1df5-46c6-9936-f056983b8361"],

Cell[BoxData["\<\"/Users/cookgb/Research/PublicPaclets/KerrModes/KerrModes/\
build/KerrModes/Documentation/English/ReferencePages/Symbols/SetSpinWeight.nb\
\"\>"], "Echo",
 CellChangeTimes->{
  3.880727877039131*^9},ExpressionUUID->"6db01328-9124-4a36-9bab-\
b756d70afa51"],

Cell[BoxData[
 TemplateBox[<|
  "obj" -> NotebookObject[
    "00eed72c-6228-456d-9c85-1ba8f34ec219", 
     "fbbee3ef-1d9f-42fb-8ad0-8c0a3dd05680"], "label" -> "\"SetSpinWeight\"", 
   "tooltip" -> 
   "\"/Users/cookgb/Research/PublicPaclets/KerrModes/KerrModes/build/\
KerrModes/Documentation/English/ReferencePages/Symbols/SetSpinWeight.nb\""|>,
  "NotebookObjectUUIDs"]], "Output",
 CellChangeTimes->{3.8807276744449253`*^9, 3.8807278777074537`*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"259ff62e-65a4-4c43-829d-4248b6b0c2b8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NotebookOpen", "[", 
  RowBox[{"Echo", "@", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
     "PacletDir", ",", "\"\<KerrModes\>\"", ",", "\"\<build\>\"", ",", 
      "\"\<KerrModes\>\"", ",", "\"\<Documentation\>\"", ",", 
      "\"\<English\>\"", ",", "\"\<ReferencePages\>\"", ",", 
      "\"\<Symbols\>\"", ",", "\"\<SpinWeight.nb\>\""}], "}"}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.879504467784739*^9, 3.879504512535911*^9}, {
   3.8795161046692877`*^9, 3.8795161103837423`*^9}, 3.880726352981681*^9, {
   3.880726422890646*^9, 3.8807264353968697`*^9}, {3.880726582833086*^9, 
   3.880726586683797*^9}, {3.880726862675466*^9, 3.880726959042717*^9}, {
   3.8807274292351923`*^9, 3.880727443314166*^9}, {3.88072759480514*^9, 
   3.88072759858635*^9}, {3.8807277201745453`*^9, 3.880727721774328*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"a1980aee-263b-4455-ad56-e5ed657b276d"],

Cell[BoxData["\<\"/Users/cookgb/Research/PublicPaclets/KerrModes/KerrModes/\
build/KerrModes/Documentation/English/ReferencePages/Symbols/SpinWeight.nb\"\>\
"], "Echo",
 CellChangeTimes->{
  3.8807277229780493`*^9},ExpressionUUID->"00b31a4e-dc54-4c48-be97-\
bc24705a0a72"],

Cell[BoxData[
 TemplateBox[<|
  "obj" -> NotebookObject[
    "2cb5f15c-4a33-417e-8bb1-bb6147125a95", 
     "e9ef3919-dd07-46a7-8858-dc6a1a154d74"], "label" -> "\"SpinWeight\"", 
   "tooltip" -> 
   "\"/Users/cookgb/Research/PublicPaclets/KerrModes/KerrModes/build/\
KerrModes/Documentation/English/ReferencePages/Symbols/SpinWeight.nb\""|>,
  "NotebookObjectUUIDs"]], "Output",
 CellChangeTimes->{3.880727723645446*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"a5edaf17-da1a-409e-890c-9c56a1e74a92"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NotebookOpen", "[", 
  RowBox[{"Echo", "@", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
     "PacletDir", ",", "\"\<KerrModes\>\"", ",", "\"\<build\>\"", ",", 
      "\"\<KerrModes\>\"", ",", "\"\<Documentation\>\"", ",", 
      "\"\<English\>\"", ",", "\"\<ReferencePages\>\"", ",", 
      "\"\<Symbols\>\"", ",", "\"\<ModeType.nb\>\""}], "}"}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.879504467784739*^9, 3.879504512535911*^9}, {
   3.8795161046692877`*^9, 3.8795161103837423`*^9}, 3.880726352981681*^9, {
   3.880726422890646*^9, 3.8807264353968697`*^9}, {3.880726582833086*^9, 
   3.880726586683797*^9}, {3.880726862675466*^9, 3.880726959042717*^9}, {
   3.8807274292351923`*^9, 3.880727443314166*^9}, {3.88072759480514*^9, 
   3.88072759858635*^9}, {3.8807277201745453`*^9, 3.880727721774328*^9}, {
   3.880727918080144*^9, 3.8807279195069017`*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"5468d4af-2f35-4d6c-ad7e-180a35ac93c5"],

Cell[BoxData["\<\"/Users/cookgb/Research/PublicPaclets/KerrModes/KerrModes/\
build/KerrModes/Documentation/English/ReferencePages/Symbols/ModeType.nb\"\>"]\
, "Echo",
 CellChangeTimes->{
  3.8807281854400578`*^9},ExpressionUUID->"9899bdef-625b-4e5f-aa89-\
f51d54fedf59"],

Cell[BoxData[
 TemplateBox[<|
  "obj" -> NotebookObject[
    "06d28770-ff1f-4c5c-9da9-aafc7954adae", 
     "34203dc3-a5e9-4715-9436-04929aeffa22"], "label" -> "\"ModeType\"", 
   "tooltip" -> 
   "\"/Users/cookgb/Research/PublicPaclets/KerrModes/KerrModes/build/\
KerrModes/Documentation/English/ReferencePages/Symbols/ModeType.nb\""|>,
  "NotebookObjectUUIDs"]], "Output",
 CellChangeTimes->{3.880727920861228*^9, 3.880728103922628*^9, 
  3.880728185769058*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"fbf56d42-1b0a-4618-955f-b36c6a0f0330"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NotebookOpen", "[", 
  RowBox[{"Echo", "@", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
     "PacletDir", ",", "\"\<KerrModes\>\"", ",", "\"\<build\>\"", ",", 
      "\"\<KerrModes\>\"", ",", "\"\<Documentation\>\"", ",", 
      "\"\<English\>\"", ",", "\"\<ReferencePages\>\"", ",", 
      "\"\<Symbols\>\"", ",", "\"\<SchwarzschildOmega.nb\>\""}], "}"}], 
    "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.879504467784739*^9, 3.879504512535911*^9}, {
   3.8795161046692877`*^9, 3.8795161103837423`*^9}, 3.880726352981681*^9, {
   3.880726422890646*^9, 3.8807264353968697`*^9}, {3.880726582833086*^9, 
   3.880726586683797*^9}, {3.880726862675466*^9, 3.880726959042717*^9}, {
   3.8807274292351923`*^9, 3.880727443314166*^9}, {3.88072759480514*^9, 
   3.88072759858635*^9}, {3.8807277201745453`*^9, 3.880727721774328*^9}, {
   3.880727918080144*^9, 3.8807279195069017`*^9}, {3.880728004963108*^9, 
   3.880728008391794*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"36514d84-290c-4426-98a6-a8b3bf1d013f"],

Cell[BoxData["\<\"/Users/cookgb/Research/PublicPaclets/KerrModes/KerrModes/\
build/KerrModes/Documentation/English/ReferencePages/Symbols/\
SchwarzschildOmega.nb\"\>"], "Echo",
 CellChangeTimes->{
  3.880728009762587*^9},ExpressionUUID->"5cbe44c3-2e24-4ce5-ae9f-\
de945a5dfca7"],

Cell[BoxData[
 TemplateBox[<|
  "obj" -> NotebookObject[
    "9f8863ef-8ba7-42c2-bd2b-38a3587480c0", 
     "aee5c6da-b281-4657-9b3e-fa446723ee9f"], "label" -> 
   "\"SchwarzschildOmega\"", "tooltip" -> 
   "\"/Users/cookgb/Research/PublicPaclets/KerrModes/KerrModes/build/\
KerrModes/Documentation/English/ReferencePages/Symbols/SchwarzschildOmega.nb\"\
"|>,
  "NotebookObjectUUIDs"]], "Output",
 CellChangeTimes->{3.880728010506303*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"9b3abe7c-79cd-41c2-9078-adf1d1722e39"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["SWSpheroidal Package Documents", "Section",
 CellChangeTimes->{{3.8795860375865917`*^9, 3.879586051818118*^9}, {
  3.8795861011219053`*^9, 
  3.879586105239852*^9}},ExpressionUUID->"6ca40153-a734-4542-8295-\
9ae16e8cab06"],

Cell[BoxData[
 RowBox[{"PacletFind", "[", "\"\<SWSpheroidal\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.879500805235086*^9, 3.879500824427189*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"046d7320-c3d1-425c-9d3e-74463a45ce34"],

Cell[BoxData[
 RowBox[{"NotebookOpen", "[", 
  RowBox[{"Echo", "@", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
     "PacletDir", ",", "\"\<SWSpheroidal\>\"", ",", "\"\<build\>\"", ",", 
      "\"\<SWSpheroidal\>\"", ",", "\"\<Documentation\>\"", ",", 
      "\"\<English\>\"", ",", "\"\<ReferencePages\>\"", ",", 
      "\"\<Symbols\>\"", ",", "\"\<SpinWeightedSpheroidal.nb\>\""}], "}"}], 
    "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.879504467784739*^9, 3.879504512535911*^9}, {
   3.8795161046692877`*^9, 3.8795161103837423`*^9}, 3.880726352981681*^9, 
   3.880727478487966*^9},
 CellLabel->"In[29]:=",ExpressionUUID->"4e7e9f86-ab59-4011-a0a5-269fd89048b6"],

Cell[BoxData[
 RowBox[{"NotebookOpen", "[", 
  RowBox[{"Echo", "@", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
     "PacletDir", ",", "\"\<SWSpheroidal\>\"", ",", "\"\<build\>\"", ",", 
      "\"\<SWSpheroidal\>\"", ",", "\"\<Documentation\>\"", ",", 
      "\"\<English\>\"", ",", "\"\<ReferencePages\>\"", ",", 
      "\"\<Symbols\>\"", ",", "\"\<AngularSpectralRoot.nb\>\""}], "}"}], 
    "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.879504467784739*^9, 3.879504512535911*^9}, {
   3.8795161046692877`*^9, 3.879516127574114*^9}, 3.880726352986866*^9, 
   3.880727485617132*^9},ExpressionUUID->"e11a816b-d9fb-426f-9c79-\
7a2e30c11b54"],

Cell[BoxData[
 RowBox[{"NotebookOpen", "[", 
  RowBox[{"Echo", "@", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
     "PacletDir", ",", "\"\<SWSpheroidal\>\"", ",", "\"\<build\>\"", ",", 
      "\"\<SWSpheroidal\>\"", ",", "\"\<Documentation\>\"", ",", 
      "\"\<English\>\"", ",", "\"\<ReferencePages\>\"", ",", 
      "\"\<Symbols\>\"", ",", "\"\<AngularSpectralRootIndex.nb\>\""}], "}"}], 
    "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.879504467784739*^9, 3.879504512535911*^9}, {
   3.8795161046692877`*^9, 3.879516164586733*^9}, 3.880726352991536*^9, 
   3.88072749159859*^9},ExpressionUUID->"e8188b1e-1d65-4925-b566-\
e3d237f59319"]
}, Closed]]
},
WindowSize->{729, 684},
WindowMargins->{{Automatic, 439.5}, {Automatic, 116.25}},
TaggingRules-><|"TryRealOnly" -> False|>,
Magnification:>1. Inherited,
FrontEndVersion->"13.1 for Linux x86 (64-bit) (June 16, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"ff1fb4bf-d62a-44b8-839d-fd3e08bc7355"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[400, 13, 155, 2, 29, "Input",ExpressionUUID->"73ff9ba2-3114-4a84-a331-875b81b51bfd"],
Cell[558, 17, 340, 9, 29, "Input",ExpressionUUID->"ffe29410-1f6c-4cd1-bcb3-7d209e3d54bb"],
Cell[901, 28, 305, 7, 29, "Input",ExpressionUUID->"b72abf0a-bfd2-4f00-91da-3a66e98d26f2"],
Cell[CellGroupData[{
Cell[1231, 39, 349, 5, 29, "Input",ExpressionUUID->"f176d2c0-072e-4b4f-bd48-16d806f0293c"],
Cell[1583, 46, 755, 12, 33, "Output",ExpressionUUID->"235a536f-f7ce-4719-a0bb-2b2cc78be0d0"]
}, Open  ]],
Cell[2353, 61, 272, 4, 29, "Input",ExpressionUUID->"9c994642-816b-4b2f-a759-9701c42cd6d8"],
Cell[2628, 67, 226, 3, 29, "Input",ExpressionUUID->"545b62f0-35de-456b-8c3d-11f8d95a6eb9"],
Cell[CellGroupData[{
Cell[2879, 74, 564, 10, 29, "Input",ExpressionUUID->"7d616c86-8072-4a37-b4bc-eb9e79f42541"],
Cell[3446, 86, 689, 14, 28, "Message",ExpressionUUID->"0228dcdd-4ccd-4441-b8b6-37fc68de4dbd"],
Cell[4138, 102, 689, 14, 28, "Message",ExpressionUUID->"4b519eb9-1777-4f75-9864-82ada1c328a3"],
Cell[4830, 118, 691, 14, 28, "Message",ExpressionUUID->"ee5ea593-c16f-4cbc-8330-3e951813ba37"],
Cell[5524, 134, 753, 16, 44, "Message",ExpressionUUID->"62e40494-5015-431b-ac3a-de9847ee6cfc"],
Cell[6280, 152, 105507, 1999, 107, "Output",ExpressionUUID->"312c34d6-d380-4688-9a4a-f85f5df20b0f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[111824, 2156, 532, 9, 29, "Input",ExpressionUUID->"9f2b4b6a-8fed-4f4c-8e0f-d53e5d105392"],
Cell[112359, 2167, 502, 11, 28, "Message",ExpressionUUID->"6a2d64cd-44ec-4c91-b74b-055243c64c7f"],
Cell[112864, 2180, 502, 11, 28, "Message",ExpressionUUID->"e0ace673-44ab-4f33-a54b-ac0ba76fa020"],
Cell[113369, 2193, 503, 11, 28, "Message",ExpressionUUID->"a24064f9-b6cc-42f1-9655-c46cbe53267e"],
Cell[113875, 2206, 567, 13, 44, "Message",ExpressionUUID->"bfefbebd-cb45-4a3f-8a6c-5d30f1c3e97d"],
Cell[114445, 2221, 505, 11, 28, "Message",ExpressionUUID->"b4a39732-1398-4773-b77f-cf097ad82b7d"],
Cell[114953, 2234, 62561, 1156, 107, "Output",ExpressionUUID->"5bfe1248-b77b-4cc4-89fd-b3b5b17f591a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[177551, 3395, 533, 9, 29, "Input",ExpressionUUID->"8e2dfd8e-ace1-40b6-9a9b-180fa0ab1d81"],
Cell[178087, 3406, 459, 10, 28, "Message",ExpressionUUID->"703bb1ac-18d5-4424-8945-d5f8fa8f1b88"],
Cell[178549, 3418, 457, 10, 28, "Message",ExpressionUUID->"403cb8e1-d293-4504-b0ca-44e3a38bc48b"],
Cell[179009, 3430, 459, 10, 28, "Message",ExpressionUUID->"a9f68028-535b-4f96-a8e5-6d314e8321b3"],
Cell[179471, 3442, 457, 10, 28, "Message",ExpressionUUID->"152b5762-7653-4743-9163-754374055b58"],
Cell[179931, 3454, 457, 10, 28, "Message",ExpressionUUID->"0668c6c3-7786-4ed1-b486-e0ee8f3d736d"],
Cell[180391, 3466, 457, 10, 28, "Message",ExpressionUUID->"90dd2997-9256-4727-936d-461bced31510"],
Cell[180851, 3478, 457, 10, 28, "Message",ExpressionUUID->"7c7e32e0-9603-4b38-ac98-94ed0cff6e04"],
Cell[181311, 3490, 68178, 1260, 107, "Output",ExpressionUUID->"85270f46-eaff-48a2-870d-13a86799714f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[249526, 4755, 531, 9, 29, "Input",ExpressionUUID->"cda96cc3-5014-4936-8781-d28ddd0ca7a3"],
Cell[250060, 4766, 435, 10, 28, "Message",ExpressionUUID->"65deea8a-d474-4e24-b5ce-eef7a664ecf9"],
Cell[250498, 4778, 435, 10, 28, "Message",ExpressionUUID->"3ea67e64-33ca-45ae-991b-5c9dbb7137a6"],
Cell[250936, 4790, 435, 10, 28, "Message",ExpressionUUID->"5e9aec7f-2275-461b-aec1-df1bcdb6d982"],
Cell[251374, 4802, 437, 10, 28, "Message",ExpressionUUID->"5cad8d3f-76f3-42d5-8023-66ceaa4f08ca"],
Cell[251814, 4814, 437, 10, 28, "Message",ExpressionUUID->"4c9f1ec3-a2a8-4a00-a4f8-f55fa9e1fd44"],
Cell[252254, 4826, 435, 10, 28, "Message",ExpressionUUID->"4aceac26-e2ce-4a67-a62d-c61b0b15e326"],
Cell[252692, 4838, 435, 10, 28, "Message",ExpressionUUID->"d5b269e4-c32e-4c4c-a387-06b22a26b687"],
Cell[253130, 4850, 434, 10, 28, "Message",ExpressionUUID->"5db56705-0e75-4775-8c76-59f4ec3540af"],
Cell[253567, 4862, 435, 10, 28, "Message",ExpressionUUID->"7fd43abe-f314-46f0-ab79-7f1d6cc905a9"],
Cell[254005, 4874, 435, 10, 28, "Message",ExpressionUUID->"9bbac42c-ec83-4697-95a7-876f34f406ca"],
Cell[254443, 4886, 84693, 1567, 107, "Output",ExpressionUUID->"7f63b019-bb01-4b42-98d4-6b4be6a0a790"]
}, Open  ]],
Cell[CellGroupData[{
Cell[339173, 6458, 535, 9, 29, "Input",ExpressionUUID->"014b5f99-4b99-400d-a97d-a802f45c9111"],
Cell[339711, 6469, 559, 12, 28, "Message",ExpressionUUID->"031e21c9-76b4-4149-bab8-415922e63dcd"],
Cell[340273, 6483, 559, 12, 28, "Message",ExpressionUUID->"2d98865b-6946-4cb1-81d1-340d3090f5e9"],
Cell[340835, 6497, 557, 12, 28, "Message",ExpressionUUID->"3f5aaaf5-3b79-449c-9b61-b6555cbdadc2"],
Cell[341395, 6511, 557, 12, 28, "Message",ExpressionUUID->"0021cdae-0425-4aba-b75e-5ca23dcd2c89"],
Cell[341955, 6525, 557, 12, 28, "Message",ExpressionUUID->"50e8d8c7-4811-46d3-8a5a-52e8fc55628a"],
Cell[342515, 6539, 557, 12, 28, "Message",ExpressionUUID->"5f388fe9-7cca-48f6-903f-06975a6bc12c"],
Cell[343075, 6553, 557, 12, 28, "Message",ExpressionUUID->"dc95de42-80a4-45ed-96b3-6fc413a6ba39"],
Cell[343635, 6567, 557, 12, 28, "Message",ExpressionUUID->"bc209418-8a1e-41d1-81d9-da8ec85149c8"],
Cell[344195, 6581, 557, 12, 28, "Message",ExpressionUUID->"0316362d-e3df-45d9-b50d-18db59a7503c"],
Cell[344755, 6595, 557, 12, 28, "Message",ExpressionUUID->"27f0f4ee-6eb1-4f2d-8951-9a1399607567"],
Cell[345315, 6609, 559, 12, 28, "Message",ExpressionUUID->"6fefa19f-a3ba-43d4-b084-1c4476384ed6"],
Cell[345877, 6623, 559, 12, 28, "Message",ExpressionUUID->"48d2ec91-de66-4748-b52f-a5335ac6aa84"],
Cell[346439, 6637, 557, 12, 28, "Message",ExpressionUUID->"9356071f-fa88-4eae-989d-c57a82664e17"],
Cell[346999, 6651, 556, 12, 28, "Message",ExpressionUUID->"80b8ab49-d616-47e8-a0a3-e9cae4e9f6b4"],
Cell[347558, 6665, 78329, 1467, 107, "Output",ExpressionUUID->"18d4ed8a-b6ea-40c1-9c91-0390e0643978"]
}, Open  ]],
Cell[CellGroupData[{
Cell[425924, 8137, 270, 4, 68, "Section",ExpressionUUID->"53cd0542-dd59-4cc7-bfa1-cdc441dee081"],
Cell[426197, 8143, 274, 4, 29, "Input",ExpressionUUID->"010a8505-fb6b-4be3-bd0d-517587a4e102"],
Cell[CellGroupData[{
Cell[426496, 8151, 898, 17, 92, "Input",ExpressionUUID->"1ce435ed-2ac0-4a83-b4e7-d5944842091b"],
Cell[427397, 8170, 273, 5, 44, "Echo",ExpressionUUID->"756bf92d-daa8-4191-97d1-98be85d2b796"],
Cell[427673, 8177, 527, 10, 45, "Output",ExpressionUUID->"f22a6d56-dfa6-49cc-a12f-c5ac180e2c94"]
}, Open  ]],
Cell[CellGroupData[{
Cell[428237, 8192, 916, 17, 71, "Input",ExpressionUUID->"26df6a34-71a9-4a4d-9419-f06737608595"],
Cell[429156, 8211, 269, 5, 44, "Echo",ExpressionUUID->"33c0395f-8fc5-4925-b30d-5c7182e3b024"],
Cell[429428, 8218, 495, 10, 45, "Output",ExpressionUUID->"bf41f173-3954-454d-8f89-8b79adefbcdf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[429960, 8233, 1094, 19, 92, "Input",ExpressionUUID->"0ab1b367-7584-40f4-b032-83c051586c2e"],
Cell[431057, 8254, 276, 5, 44, "Echo",ExpressionUUID->"bf0c39c6-7d24-4e33-8cf6-f73c5a244f1a"],
Cell[431336, 8261, 814, 14, 45, "Output",ExpressionUUID->"c6176ae2-1237-4048-ad1d-fb41dbedb4e5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[432187, 8280, 1101, 19, 92, "Input",ExpressionUUID->"18de6259-cbfa-49d2-925b-a83770c35b01"],
Cell[433291, 8301, 282, 5, 44, "Echo",ExpressionUUID->"d93ebce6-fec4-4212-96e9-ac0fed52fba5"],
Cell[433576, 8308, 667, 13, 43, "Output",ExpressionUUID->"af11a7a3-1385-4404-8f38-9c95c9c43c07"]
}, Open  ]],
Cell[CellGroupData[{
Cell[434280, 8326, 1144, 20, 94, "Input",ExpressionUUID->"9fb22665-7704-496a-b6c7-ad93214bbddb"],
Cell[435427, 8348, 279, 5, 44, "Echo",ExpressionUUID->"1f664df6-17cc-4e79-b007-a6cb4b506d30"],
Cell[435709, 8355, 515, 11, 43, "Output",ExpressionUUID->"1869cec1-8fb0-4b5b-bb17-e72e6045ae0d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[436261, 8371, 849, 16, 94, "Input",ExpressionUUID->"86356931-6a90-4c82-88bc-c9b3950688f6"],
Cell[437113, 8389, 275, 5, 44, "Echo",ExpressionUUID->"9f80d295-a533-40c4-899d-cab381ed1512"],
Cell[437391, 8396, 655, 13, 43, "Output",ExpressionUUID->"35131922-10ef-4ad6-b99b-f3176418948c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[438083, 8414, 897, 17, 94, "Input",ExpressionUUID->"9973e64c-59ca-45a3-83e4-ede5559303b9"],
Cell[438983, 8433, 269, 4, 44, "Echo",ExpressionUUID->"32ce0db9-a373-4d26-a729-b6e068a9f028"],
Cell[439255, 8439, 504, 10, 43, "Output",ExpressionUUID->"0d4adf40-123f-4c53-90a4-21f662186b70"]
}, Open  ]],
Cell[CellGroupData[{
Cell[439796, 8454, 903, 17, 94, "Input",ExpressionUUID->"641a76aa-a346-4933-b77e-e85ccb354812"],
Cell[440702, 8473, 279, 5, 44, "Echo",ExpressionUUID->"c82b8eb7-4e96-43f9-aeab-bcbc8e9fe67b"],
Cell[440984, 8480, 518, 11, 43, "Output",ExpressionUUID->"8d875c4b-3350-4102-a83e-e8f25f00d5f4"]
}, Open  ]],
Cell[441517, 8494, 903, 17, 94, "Input",ExpressionUUID->"82fbcfe9-bd79-4436-b5f7-3f07ce6f38de"],
Cell[442423, 8513, 903, 17, 94, "Input",ExpressionUUID->"60206c08-1f5c-43ab-af41-35fbcfc8f473"],
Cell[CellGroupData[{
Cell[443351, 8534, 953, 17, 94, "Input",ExpressionUUID->"da24b737-0e4f-4f56-9f7c-e0c9905aff7d"],
Cell[444307, 8553, 283, 5, 44, "Echo",ExpressionUUID->"d4289079-21fa-4da2-9096-1f17e50f2d42"],
Cell[444593, 8560, 522, 11, 43, "Output",ExpressionUUID->"7cfc092c-8438-4f06-bfc8-68b759d3951c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[445152, 8576, 940, 17, 94, "Input",ExpressionUUID->"98e50c56-1df5-46c6-9936-f056983b8361"],
Cell[446095, 8595, 273, 5, 44, "Echo",ExpressionUUID->"6db01328-9124-4a36-9bab-b756d70afa51"],
Cell[446371, 8602, 530, 10, 43, "Output",ExpressionUUID->"259ff62e-65a4-4c43-829d-4248b6b0c2b8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[446938, 8617, 940, 17, 94, "Input",ExpressionUUID->"a1980aee-263b-4455-ad56-e5ed657b276d"],
Cell[447881, 8636, 272, 5, 44, "Echo",ExpressionUUID->"00b31a4e-dc54-4c48-be97-bc24705a0a72"],
Cell[448156, 8643, 498, 10, 43, "Output",ExpressionUUID->"a5edaf17-da1a-409e-890c-9c56a1e74a92"]
}, Open  ]],
Cell[CellGroupData[{
Cell[448691, 8658, 990, 18, 73, "Input",ExpressionUUID->"5468d4af-2f35-4d6c-ad7e-180a35ac93c5"],
Cell[449684, 8678, 270, 5, 44, "Echo",ExpressionUUID->"9899bdef-625b-4e5f-aa89-f51d54fedf59"],
Cell[449957, 8685, 541, 11, 43, "Output",ExpressionUUID->"fbf56d42-1b0a-4618-955f-b36c6a0f0330"]
}, Open  ]],
Cell[CellGroupData[{
Cell[450535, 8701, 1052, 19, 94, "Input",ExpressionUUID->"36514d84-290c-4426-98a6-a8b3bf1d013f"],
Cell[451590, 8722, 278, 5, 44, "Echo",ExpressionUUID->"5cbe44c3-2e24-4ce5-ae9f-de945a5dfca7"],
Cell[451871, 8729, 516, 11, 43, "Output",ExpressionUUID->"9b3abe7c-79cd-41c2-9078-adf1d1722e39"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[452436, 8746, 228, 4, 67, "Section",ExpressionUUID->"6ca40153-a734-4542-8295-9ae16e8cab06"],
Cell[452667, 8752, 226, 3, 30, "Input",ExpressionUUID->"046d7320-c3d1-425c-9d3e-74463a45ce34"],
Cell[452896, 8757, 690, 14, 94, "Input",ExpressionUUID->"4e7e9f86-ab59-4011-a0a5-269fd89048b6"],
Cell[453589, 8773, 663, 14, 94, "Input",ExpressionUUID->"e11a816b-d9fb-426f-9c79-7a2e30c11b54"],
Cell[454255, 8789, 667, 14, 94, "Input",ExpressionUUID->"e8188b1e-1d65-4925-b566-e3d237f59319"]
}, Closed]]
}
]
*)

